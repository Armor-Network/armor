// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages-bytecoin.proto

#include "messages-bytecoin.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace hw {
namespace trezor {
namespace messages {
namespace bytecoin {
class BytecoinStartRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BytecoinStartRequest>
      _instance;
} _BytecoinStartRequest_default_instance_;
class BytecoinStartResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BytecoinStartResponse>
      _instance;
} _BytecoinStartResponse_default_instance_;
class BytecoinScanOutputsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BytecoinScanOutputsRequest>
      _instance;
} _BytecoinScanOutputsRequest_default_instance_;
class BytecoinScanOutputsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BytecoinScanOutputsResponse>
      _instance;
} _BytecoinScanOutputsResponse_default_instance_;
class BytecoinGenerateKeyimageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BytecoinGenerateKeyimageRequest>
      _instance;
} _BytecoinGenerateKeyimageRequest_default_instance_;
class BytecoinGenerateKeyimageResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BytecoinGenerateKeyimageResponse>
      _instance;
} _BytecoinGenerateKeyimageResponse_default_instance_;
class BytecoinGenerateOutputSeedRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BytecoinGenerateOutputSeedRequest>
      _instance;
} _BytecoinGenerateOutputSeedRequest_default_instance_;
class BytecoinGenerateOutputSeedResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BytecoinGenerateOutputSeedResponse>
      _instance;
} _BytecoinGenerateOutputSeedResponse_default_instance_;
class BytecoinExportViewWalletRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BytecoinExportViewWalletRequest>
      _instance;
} _BytecoinExportViewWalletRequest_default_instance_;
class BytecoinExportViewWalletResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BytecoinExportViewWalletResponse>
      _instance;
} _BytecoinExportViewWalletResponse_default_instance_;
class BytecoinSignStartRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BytecoinSignStartRequest>
      _instance;
} _BytecoinSignStartRequest_default_instance_;
class BytecoinEmptyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BytecoinEmptyResponse>
      _instance;
} _BytecoinEmptyResponse_default_instance_;
class BytecoinSignAddInputRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BytecoinSignAddInputRequest>
      _instance;
} _BytecoinSignAddInputRequest_default_instance_;
class BytecoinSignAddOutputRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BytecoinSignAddOutputRequest>
      _instance;
} _BytecoinSignAddOutputRequest_default_instance_;
class BytecoinSignAddOutputResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BytecoinSignAddOutputResponse>
      _instance;
} _BytecoinSignAddOutputResponse_default_instance_;
class BytecoinSignAddExtraRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BytecoinSignAddExtraRequest>
      _instance;
} _BytecoinSignAddExtraRequest_default_instance_;
class BytecoinSignStepARequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BytecoinSignStepARequest>
      _instance;
} _BytecoinSignStepARequest_default_instance_;
class BytecoinSignStepAResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BytecoinSignStepAResponse>
      _instance;
} _BytecoinSignStepAResponse_default_instance_;
class BytecoinSignStepAMoreDataRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BytecoinSignStepAMoreDataRequest>
      _instance;
} _BytecoinSignStepAMoreDataRequest_default_instance_;
class BytecoinSignGetC0RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BytecoinSignGetC0Request>
      _instance;
} _BytecoinSignGetC0Request_default_instance_;
class BytecoinSignGetC0ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BytecoinSignGetC0Response>
      _instance;
} _BytecoinSignGetC0Response_default_instance_;
class BytecoinSignStepBRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BytecoinSignStepBRequest>
      _instance;
} _BytecoinSignStepBRequest_default_instance_;
class BytecoinSignStepBResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BytecoinSignStepBResponse>
      _instance;
} _BytecoinSignStepBResponse_default_instance_;
class BytecoinStartProofRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BytecoinStartProofRequest>
      _instance;
} _BytecoinStartProofRequest_default_instance_;
class BytecoinProofMoreDataRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BytecoinProofMoreDataRequest>
      _instance;
} _BytecoinProofMoreDataRequest_default_instance_;
}  // namespace bytecoin
}  // namespace messages
}  // namespace trezor
}  // namespace hw
namespace protobuf_messages_2dbytecoin_2eproto {
static void InitDefaultsBytecoinStartRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::bytecoin::_BytecoinStartRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::bytecoin::BytecoinStartRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::bytecoin::BytecoinStartRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BytecoinStartRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBytecoinStartRequest}, {}};

static void InitDefaultsBytecoinStartResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::bytecoin::_BytecoinStartResponse_default_instance_;
    new (ptr) ::hw::trezor::messages::bytecoin::BytecoinStartResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::bytecoin::BytecoinStartResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BytecoinStartResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBytecoinStartResponse}, {}};

static void InitDefaultsBytecoinScanOutputsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::bytecoin::_BytecoinScanOutputsRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::bytecoin::BytecoinScanOutputsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::bytecoin::BytecoinScanOutputsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BytecoinScanOutputsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBytecoinScanOutputsRequest}, {}};

static void InitDefaultsBytecoinScanOutputsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::bytecoin::_BytecoinScanOutputsResponse_default_instance_;
    new (ptr) ::hw::trezor::messages::bytecoin::BytecoinScanOutputsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::bytecoin::BytecoinScanOutputsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BytecoinScanOutputsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBytecoinScanOutputsResponse}, {}};

static void InitDefaultsBytecoinGenerateKeyimageRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::bytecoin::_BytecoinGenerateKeyimageRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::bytecoin::BytecoinGenerateKeyimageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::bytecoin::BytecoinGenerateKeyimageRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BytecoinGenerateKeyimageRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBytecoinGenerateKeyimageRequest}, {}};

static void InitDefaultsBytecoinGenerateKeyimageResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::bytecoin::_BytecoinGenerateKeyimageResponse_default_instance_;
    new (ptr) ::hw::trezor::messages::bytecoin::BytecoinGenerateKeyimageResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::bytecoin::BytecoinGenerateKeyimageResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BytecoinGenerateKeyimageResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBytecoinGenerateKeyimageResponse}, {}};

static void InitDefaultsBytecoinGenerateOutputSeedRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::bytecoin::_BytecoinGenerateOutputSeedRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::bytecoin::BytecoinGenerateOutputSeedRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::bytecoin::BytecoinGenerateOutputSeedRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BytecoinGenerateOutputSeedRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBytecoinGenerateOutputSeedRequest}, {}};

static void InitDefaultsBytecoinGenerateOutputSeedResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::bytecoin::_BytecoinGenerateOutputSeedResponse_default_instance_;
    new (ptr) ::hw::trezor::messages::bytecoin::BytecoinGenerateOutputSeedResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::bytecoin::BytecoinGenerateOutputSeedResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BytecoinGenerateOutputSeedResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBytecoinGenerateOutputSeedResponse}, {}};

static void InitDefaultsBytecoinExportViewWalletRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::bytecoin::_BytecoinExportViewWalletRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::bytecoin::BytecoinExportViewWalletRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::bytecoin::BytecoinExportViewWalletRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BytecoinExportViewWalletRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBytecoinExportViewWalletRequest}, {}};

static void InitDefaultsBytecoinExportViewWalletResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::bytecoin::_BytecoinExportViewWalletResponse_default_instance_;
    new (ptr) ::hw::trezor::messages::bytecoin::BytecoinExportViewWalletResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::bytecoin::BytecoinExportViewWalletResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BytecoinExportViewWalletResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBytecoinExportViewWalletResponse}, {}};

static void InitDefaultsBytecoinSignStartRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::bytecoin::_BytecoinSignStartRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::bytecoin::BytecoinSignStartRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::bytecoin::BytecoinSignStartRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BytecoinSignStartRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBytecoinSignStartRequest}, {}};

static void InitDefaultsBytecoinEmptyResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::bytecoin::_BytecoinEmptyResponse_default_instance_;
    new (ptr) ::hw::trezor::messages::bytecoin::BytecoinEmptyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::bytecoin::BytecoinEmptyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BytecoinEmptyResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBytecoinEmptyResponse}, {}};

static void InitDefaultsBytecoinSignAddInputRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::bytecoin::_BytecoinSignAddInputRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::bytecoin::BytecoinSignAddInputRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::bytecoin::BytecoinSignAddInputRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BytecoinSignAddInputRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBytecoinSignAddInputRequest}, {}};

static void InitDefaultsBytecoinSignAddOutputRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::bytecoin::_BytecoinSignAddOutputRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::bytecoin::BytecoinSignAddOutputRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::bytecoin::BytecoinSignAddOutputRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BytecoinSignAddOutputRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBytecoinSignAddOutputRequest}, {}};

static void InitDefaultsBytecoinSignAddOutputResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::bytecoin::_BytecoinSignAddOutputResponse_default_instance_;
    new (ptr) ::hw::trezor::messages::bytecoin::BytecoinSignAddOutputResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::bytecoin::BytecoinSignAddOutputResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BytecoinSignAddOutputResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBytecoinSignAddOutputResponse}, {}};

static void InitDefaultsBytecoinSignAddExtraRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::bytecoin::_BytecoinSignAddExtraRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::bytecoin::BytecoinSignAddExtraRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::bytecoin::BytecoinSignAddExtraRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BytecoinSignAddExtraRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBytecoinSignAddExtraRequest}, {}};

static void InitDefaultsBytecoinSignStepARequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::bytecoin::_BytecoinSignStepARequest_default_instance_;
    new (ptr) ::hw::trezor::messages::bytecoin::BytecoinSignStepARequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::bytecoin::BytecoinSignStepARequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BytecoinSignStepARequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBytecoinSignStepARequest}, {}};

static void InitDefaultsBytecoinSignStepAResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::bytecoin::_BytecoinSignStepAResponse_default_instance_;
    new (ptr) ::hw::trezor::messages::bytecoin::BytecoinSignStepAResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::bytecoin::BytecoinSignStepAResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BytecoinSignStepAResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBytecoinSignStepAResponse}, {}};

static void InitDefaultsBytecoinSignStepAMoreDataRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::bytecoin::_BytecoinSignStepAMoreDataRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::bytecoin::BytecoinSignStepAMoreDataRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::bytecoin::BytecoinSignStepAMoreDataRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BytecoinSignStepAMoreDataRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBytecoinSignStepAMoreDataRequest}, {}};

static void InitDefaultsBytecoinSignGetC0Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::bytecoin::_BytecoinSignGetC0Request_default_instance_;
    new (ptr) ::hw::trezor::messages::bytecoin::BytecoinSignGetC0Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::bytecoin::BytecoinSignGetC0Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BytecoinSignGetC0Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBytecoinSignGetC0Request}, {}};

static void InitDefaultsBytecoinSignGetC0Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::bytecoin::_BytecoinSignGetC0Response_default_instance_;
    new (ptr) ::hw::trezor::messages::bytecoin::BytecoinSignGetC0Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::bytecoin::BytecoinSignGetC0Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BytecoinSignGetC0Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBytecoinSignGetC0Response}, {}};

static void InitDefaultsBytecoinSignStepBRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::bytecoin::_BytecoinSignStepBRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::bytecoin::BytecoinSignStepBRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::bytecoin::BytecoinSignStepBRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BytecoinSignStepBRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBytecoinSignStepBRequest}, {}};

static void InitDefaultsBytecoinSignStepBResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::bytecoin::_BytecoinSignStepBResponse_default_instance_;
    new (ptr) ::hw::trezor::messages::bytecoin::BytecoinSignStepBResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::bytecoin::BytecoinSignStepBResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BytecoinSignStepBResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBytecoinSignStepBResponse}, {}};

static void InitDefaultsBytecoinStartProofRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::bytecoin::_BytecoinStartProofRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::bytecoin::BytecoinStartProofRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::bytecoin::BytecoinStartProofRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BytecoinStartProofRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBytecoinStartProofRequest}, {}};

static void InitDefaultsBytecoinProofMoreDataRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::bytecoin::_BytecoinProofMoreDataRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::bytecoin::BytecoinProofMoreDataRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::bytecoin::BytecoinProofMoreDataRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BytecoinProofMoreDataRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBytecoinProofMoreDataRequest}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_BytecoinStartRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BytecoinStartResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BytecoinScanOutputsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BytecoinScanOutputsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BytecoinGenerateKeyimageRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BytecoinGenerateKeyimageResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BytecoinGenerateOutputSeedRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BytecoinGenerateOutputSeedResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BytecoinExportViewWalletRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BytecoinExportViewWalletResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BytecoinSignStartRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BytecoinEmptyResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BytecoinSignAddInputRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BytecoinSignAddOutputRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BytecoinSignAddOutputResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BytecoinSignAddExtraRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BytecoinSignStepARequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BytecoinSignStepAResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BytecoinSignStepAMoreDataRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BytecoinSignGetC0Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BytecoinSignGetC0Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BytecoinSignStepBRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BytecoinSignStepBResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BytecoinStartProofRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BytecoinProofMoreDataRequest.base);
}

::google::protobuf::Metadata file_level_metadata[25];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinStartRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinStartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinStartRequest, debug_request_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinStartResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinStartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinStartResponse, wallet_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinStartResponse, a_plus_sh_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinStartResponse, v_mul_a_plus_sh_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinStartResponse, view_public_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinStartResponse, debug_response_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinScanOutputsRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinScanOutputsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinScanOutputsRequest, output_public_key_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinScanOutputsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinScanOutputsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinScanOutputsResponse, pv_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinGenerateKeyimageRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinGenerateKeyimageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinGenerateKeyimageRequest, output_public_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinGenerateKeyimageRequest, inv_output_main_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinGenerateKeyimageRequest, address_index_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinGenerateKeyimageResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinGenerateKeyimageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinGenerateKeyimageResponse, keyimage_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinGenerateOutputSeedRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinGenerateOutputSeedRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinGenerateOutputSeedRequest, tx_inputs_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinGenerateOutputSeedRequest, out_index_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinGenerateOutputSeedResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinGenerateOutputSeedResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinGenerateOutputSeedResponse, output_seed_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinExportViewWalletRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinExportViewWalletRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinExportViewWalletResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinExportViewWalletResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinExportViewWalletResponse, audit_key_base_secret_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinExportViewWalletResponse, view_secret_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinExportViewWalletResponse, tx_derivation_seed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinExportViewWalletResponse, view_secrets_signature_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignStartRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignStartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignStartRequest, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignStartRequest, ut_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignStartRequest, inputs_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignStartRequest, outputs_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignStartRequest, extra_size_),
  1,
  0,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinEmptyResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinEmptyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignAddInputRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignAddInputRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignAddInputRequest, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignAddInputRequest, output_indexes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignAddInputRequest, inv_output_main_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignAddInputRequest, address_index_),
  1,
  ~0u,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignAddOutputRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignAddOutputRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignAddOutputRequest, change_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignAddOutputRequest, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignAddOutputRequest, dst_address_tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignAddOutputRequest, dst_address_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignAddOutputRequest, dst_address_sv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignAddOutputRequest, change_address_index_),
  3,
  2,
  4,
  0,
  1,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignAddOutputResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignAddOutputResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignAddOutputResponse, public_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignAddOutputResponse, encrypted_secret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignAddOutputResponse, encrypted_address_type_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignAddExtraRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignAddExtraRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignAddExtraRequest, extra_chunk_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignStepARequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignStepARequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignStepARequest, inv_output_main_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignStepARequest, address_index_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignStepAResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignStepAResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignStepAResponse, sig_p_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignStepAResponse, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignStepAResponse, y_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignStepAMoreDataRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignStepAMoreDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignStepAMoreDataRequest, data_chunk_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignGetC0Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignGetC0Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignGetC0Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignGetC0Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignGetC0Response, c0_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignStepBRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignStepBRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignStepBRequest, inv_output_main_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignStepBRequest, address_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignStepBRequest, my_c_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignStepBResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignStepBResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignStepBResponse, my_ra_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignStepBResponse, rb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinSignStepBResponse, rc_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinStartProofRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinStartProofRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinStartProofRequest, data_size_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinProofMoreDataRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinProofMoreDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hw::trezor::messages::bytecoin::BytecoinProofMoreDataRequest, data_chunk_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::hw::trezor::messages::bytecoin::BytecoinStartRequest)},
  { 7, 17, sizeof(::hw::trezor::messages::bytecoin::BytecoinStartResponse)},
  { 22, 28, sizeof(::hw::trezor::messages::bytecoin::BytecoinScanOutputsRequest)},
  { 29, 35, sizeof(::hw::trezor::messages::bytecoin::BytecoinScanOutputsResponse)},
  { 36, 44, sizeof(::hw::trezor::messages::bytecoin::BytecoinGenerateKeyimageRequest)},
  { 47, 53, sizeof(::hw::trezor::messages::bytecoin::BytecoinGenerateKeyimageResponse)},
  { 54, 61, sizeof(::hw::trezor::messages::bytecoin::BytecoinGenerateOutputSeedRequest)},
  { 63, 69, sizeof(::hw::trezor::messages::bytecoin::BytecoinGenerateOutputSeedResponse)},
  { 70, 75, sizeof(::hw::trezor::messages::bytecoin::BytecoinExportViewWalletRequest)},
  { 75, 84, sizeof(::hw::trezor::messages::bytecoin::BytecoinExportViewWalletResponse)},
  { 88, 98, sizeof(::hw::trezor::messages::bytecoin::BytecoinSignStartRequest)},
  { 103, 108, sizeof(::hw::trezor::messages::bytecoin::BytecoinEmptyResponse)},
  { 108, 117, sizeof(::hw::trezor::messages::bytecoin::BytecoinSignAddInputRequest)},
  { 121, 132, sizeof(::hw::trezor::messages::bytecoin::BytecoinSignAddOutputRequest)},
  { 138, 146, sizeof(::hw::trezor::messages::bytecoin::BytecoinSignAddOutputResponse)},
  { 149, 155, sizeof(::hw::trezor::messages::bytecoin::BytecoinSignAddExtraRequest)},
  { 156, 163, sizeof(::hw::trezor::messages::bytecoin::BytecoinSignStepARequest)},
  { 165, 173, sizeof(::hw::trezor::messages::bytecoin::BytecoinSignStepAResponse)},
  { 176, 182, sizeof(::hw::trezor::messages::bytecoin::BytecoinSignStepAMoreDataRequest)},
  { 183, 188, sizeof(::hw::trezor::messages::bytecoin::BytecoinSignGetC0Request)},
  { 188, 194, sizeof(::hw::trezor::messages::bytecoin::BytecoinSignGetC0Response)},
  { 195, 203, sizeof(::hw::trezor::messages::bytecoin::BytecoinSignStepBRequest)},
  { 206, 214, sizeof(::hw::trezor::messages::bytecoin::BytecoinSignStepBResponse)},
  { 217, 223, sizeof(::hw::trezor::messages::bytecoin::BytecoinStartProofRequest)},
  { 224, 230, sizeof(::hw::trezor::messages::bytecoin::BytecoinProofMoreDataRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::bytecoin::_BytecoinStartRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::bytecoin::_BytecoinStartResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::bytecoin::_BytecoinScanOutputsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::bytecoin::_BytecoinScanOutputsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::bytecoin::_BytecoinGenerateKeyimageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::bytecoin::_BytecoinGenerateKeyimageResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::bytecoin::_BytecoinGenerateOutputSeedRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::bytecoin::_BytecoinGenerateOutputSeedResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::bytecoin::_BytecoinExportViewWalletRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::bytecoin::_BytecoinExportViewWalletResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::bytecoin::_BytecoinSignStartRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::bytecoin::_BytecoinEmptyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::bytecoin::_BytecoinSignAddInputRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::bytecoin::_BytecoinSignAddOutputRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::bytecoin::_BytecoinSignAddOutputResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::bytecoin::_BytecoinSignAddExtraRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::bytecoin::_BytecoinSignStepARequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::bytecoin::_BytecoinSignStepAResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::bytecoin::_BytecoinSignStepAMoreDataRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::bytecoin::_BytecoinSignGetC0Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::bytecoin::_BytecoinSignGetC0Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::bytecoin::_BytecoinSignStepBRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::bytecoin::_BytecoinSignStepBResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::bytecoin::_BytecoinStartProofRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::bytecoin::_BytecoinProofMoreDataRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "messages-bytecoin.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 25);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027messages-bytecoin.proto\022\033hw.trezor.mes"
      "sages.bytecoin\"-\n\024BytecoinStartRequest\022\025"
      "\n\rdebug_request\030\001 \001(\014\"\210\001\n\025BytecoinStartR"
      "esponse\022\022\n\nwallet_key\030\001 \001(\014\022\021\n\tA_plus_sH"
      "\030\002 \001(\014\022\027\n\017v_mul_A_plus_sH\030\003 \001(\014\022\027\n\017view_"
      "public_key\030\004 \001(\014\022\026\n\016debug_response\030\005 \001(\014"
      "\"7\n\032BytecoinScanOutputsRequest\022\031\n\021output"
      "_public_key\030\001 \003(\014\")\n\033BytecoinScanOutputs"
      "Response\022\n\n\002Pv\030\001 \003(\014\"q\n\037BytecoinGenerate"
      "KeyimageRequest\022\031\n\021output_public_key\030\001 \001"
      "(\014\022\034\n\024inv_output_main_hash\030\002 \001(\014\022\025\n\raddr"
      "ess_index\030\003 \001(\r\"4\n BytecoinGenerateKeyim"
      "ageResponse\022\020\n\010keyimage\030\001 \001(\014\"N\n!Bytecoi"
      "nGenerateOutputSeedRequest\022\026\n\016tx_inputs_"
      "hash\030\001 \001(\014\022\021\n\tout_index\030\003 \001(\r\"9\n\"Bytecoi"
      "nGenerateOutputSeedResponse\022\023\n\013output_se"
      "ed\030\001 \001(\014\"!\n\037BytecoinExportViewWalletRequ"
      "est\"\232\001\n BytecoinExportViewWalletResponse"
      "\022!\n\031audit_key_base_secret_key\030\001 \001(\014\022\027\n\017v"
      "iew_secret_key\030\002 \001(\014\022\032\n\022tx_derivation_se"
      "ed\030\003 \001(\014\022\036\n\026view_secrets_signature\030\004 \001(\014"
      "\"v\n\030BytecoinSignStartRequest\022\017\n\007version\030"
      "\001 \001(\r\022\n\n\002ut\030\002 \001(\004\022\023\n\013inputs_size\030\003 \001(\r\022\024"
      "\n\014outputs_size\030\004 \001(\r\022\022\n\nextra_size\030\005 \001(\r"
      "\"\027\n\025BytecoinEmptyResponse\"z\n\033BytecoinSig"
      "nAddInputRequest\022\016\n\006amount\030\001 \001(\004\022\026\n\016outp"
      "ut_indexes\030\002 \003(\r\022\034\n\024inv_output_main_hash"
      "\030\003 \001(\014\022\025\n\raddress_index\030\004 \001(\r\"\244\001\n\034Byteco"
      "inSignAddOutputRequest\022\016\n\006change\030\001 \001(\010\022\016"
      "\n\006amount\030\002 \001(\004\022\027\n\017dst_address_tag\030\003 \001(\r\022"
      "\025\n\rdst_address_S\030\004 \001(\014\022\026\n\016dst_address_Sv"
      "\030\005 \001(\014\022\034\n\024change_address_index\030\006 \001(\r\"m\n\035"
      "BytecoinSignAddOutputResponse\022\022\n\npublic_"
      "key\030\001 \001(\014\022\030\n\020encrypted_secret\030\002 \001(\014\022\036\n\026e"
      "ncrypted_address_type\030\003 \001(\r\"2\n\033BytecoinS"
      "ignAddExtraRequest\022\023\n\013extra_chunk\030\001 \001(\014\""
      "O\n\030BytecoinSignStepARequest\022\034\n\024inv_outpu"
      "t_main_hash\030\001 \001(\014\022\025\n\raddress_index\030\002 \001(\004"
      "\"@\n\031BytecoinSignStepAResponse\022\r\n\005sig_p\030\001"
      " \001(\014\022\t\n\001x\030\002 \001(\014\022\t\n\001y\030\003 \001(\014\"6\n BytecoinSi"
      "gnStepAMoreDataRequest\022\022\n\ndata_chunk\030\001 \001"
      "(\014\"\032\n\030BytecoinSignGetC0Request\"\'\n\031Byteco"
      "inSignGetC0Response\022\n\n\002c0\030\001 \001(\014\"]\n\030Bytec"
      "oinSignStepBRequest\022\034\n\024inv_output_main_h"
      "ash\030\001 \001(\014\022\025\n\raddress_index\030\002 \001(\004\022\014\n\004my_c"
      "\030\003 \001(\014\"B\n\031BytecoinSignStepBResponse\022\r\n\005m"
      "y_ra\030\001 \001(\014\022\n\n\002rb\030\002 \001(\014\022\n\n\002rc\030\003 \001(\014\".\n\031By"
      "tecoinStartProofRequest\022\021\n\tdata_size\030\001 \001"
      "(\r\"2\n\034BytecoinProofMoreDataRequest\022\022\n\nda"
      "ta_chunk\030\001 \001(\014B<\n#com.satoshilabs.trezor"
      ".lib.protobufB\025TrezorMessageBytecoin"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2036);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messages-bytecoin.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_messages_2dbytecoin_2eproto
namespace hw {
namespace trezor {
namespace messages {
namespace bytecoin {

// ===================================================================

void BytecoinStartRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BytecoinStartRequest::kDebugRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytecoinStartRequest::BytecoinStartRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinStartRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.bytecoin.BytecoinStartRequest)
}
BytecoinStartRequest::BytecoinStartRequest(const BytecoinStartRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  debug_request_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_debug_request()) {
    debug_request_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.debug_request_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.bytecoin.BytecoinStartRequest)
}

void BytecoinStartRequest::SharedCtor() {
  debug_request_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BytecoinStartRequest::~BytecoinStartRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.bytecoin.BytecoinStartRequest)
  SharedDtor();
}

void BytecoinStartRequest::SharedDtor() {
  debug_request_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BytecoinStartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BytecoinStartRequest::descriptor() {
  ::protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytecoinStartRequest& BytecoinStartRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinStartRequest.base);
  return *internal_default_instance();
}


void BytecoinStartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.bytecoin.BytecoinStartRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    debug_request_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BytecoinStartRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.bytecoin.BytecoinStartRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes debug_request = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_debug_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.bytecoin.BytecoinStartRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.bytecoin.BytecoinStartRequest)
  return false;
#undef DO_
}

void BytecoinStartRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.bytecoin.BytecoinStartRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes debug_request = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->debug_request(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.bytecoin.BytecoinStartRequest)
}

::google::protobuf::uint8* BytecoinStartRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.bytecoin.BytecoinStartRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes debug_request = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->debug_request(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.bytecoin.BytecoinStartRequest)
  return target;
}

size_t BytecoinStartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.bytecoin.BytecoinStartRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bytes debug_request = 1;
  if (has_debug_request()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->debug_request());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BytecoinStartRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.bytecoin.BytecoinStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BytecoinStartRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytecoinStartRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.bytecoin.BytecoinStartRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.bytecoin.BytecoinStartRequest)
    MergeFrom(*source);
  }
}

void BytecoinStartRequest::MergeFrom(const BytecoinStartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.bytecoin.BytecoinStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_debug_request()) {
    set_has_debug_request();
    debug_request_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.debug_request_);
  }
}

void BytecoinStartRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.bytecoin.BytecoinStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytecoinStartRequest::CopyFrom(const BytecoinStartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.bytecoin.BytecoinStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytecoinStartRequest::IsInitialized() const {
  return true;
}

void BytecoinStartRequest::Swap(BytecoinStartRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytecoinStartRequest::InternalSwap(BytecoinStartRequest* other) {
  using std::swap;
  debug_request_.Swap(&other->debug_request_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BytecoinStartRequest::GetMetadata() const {
  protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BytecoinStartResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BytecoinStartResponse::kWalletKeyFieldNumber;
const int BytecoinStartResponse::kAPlusSHFieldNumber;
const int BytecoinStartResponse::kVMulAPlusSHFieldNumber;
const int BytecoinStartResponse::kViewPublicKeyFieldNumber;
const int BytecoinStartResponse::kDebugResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytecoinStartResponse::BytecoinStartResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinStartResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.bytecoin.BytecoinStartResponse)
}
BytecoinStartResponse::BytecoinStartResponse(const BytecoinStartResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  wallet_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_wallet_key()) {
    wallet_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wallet_key_);
  }
  a_plus_sh_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_a_plus_sh()) {
    a_plus_sh_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.a_plus_sh_);
  }
  v_mul_a_plus_sh_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_v_mul_a_plus_sh()) {
    v_mul_a_plus_sh_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.v_mul_a_plus_sh_);
  }
  view_public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_view_public_key()) {
    view_public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.view_public_key_);
  }
  debug_response_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_debug_response()) {
    debug_response_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.debug_response_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.bytecoin.BytecoinStartResponse)
}

void BytecoinStartResponse::SharedCtor() {
  wallet_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  a_plus_sh_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  v_mul_a_plus_sh_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  view_public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  debug_response_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BytecoinStartResponse::~BytecoinStartResponse() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.bytecoin.BytecoinStartResponse)
  SharedDtor();
}

void BytecoinStartResponse::SharedDtor() {
  wallet_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  a_plus_sh_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  v_mul_a_plus_sh_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  view_public_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  debug_response_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BytecoinStartResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BytecoinStartResponse::descriptor() {
  ::protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytecoinStartResponse& BytecoinStartResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinStartResponse.base);
  return *internal_default_instance();
}


void BytecoinStartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.bytecoin.BytecoinStartResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      wallet_key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      a_plus_sh_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      v_mul_a_plus_sh_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      view_public_key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      debug_response_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BytecoinStartResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.bytecoin.BytecoinStartResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes wallet_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_wallet_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes A_plus_sH = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_a_plus_sh()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes v_mul_A_plus_sH = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_v_mul_a_plus_sh()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes view_public_key = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_view_public_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes debug_response = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_debug_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.bytecoin.BytecoinStartResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.bytecoin.BytecoinStartResponse)
  return false;
#undef DO_
}

void BytecoinStartResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.bytecoin.BytecoinStartResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes wallet_key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->wallet_key(), output);
  }

  // optional bytes A_plus_sH = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->a_plus_sh(), output);
  }

  // optional bytes v_mul_A_plus_sH = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->v_mul_a_plus_sh(), output);
  }

  // optional bytes view_public_key = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->view_public_key(), output);
  }

  // optional bytes debug_response = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->debug_response(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.bytecoin.BytecoinStartResponse)
}

::google::protobuf::uint8* BytecoinStartResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.bytecoin.BytecoinStartResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes wallet_key = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->wallet_key(), target);
  }

  // optional bytes A_plus_sH = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->a_plus_sh(), target);
  }

  // optional bytes v_mul_A_plus_sH = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->v_mul_a_plus_sh(), target);
  }

  // optional bytes view_public_key = 4;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->view_public_key(), target);
  }

  // optional bytes debug_response = 5;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->debug_response(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.bytecoin.BytecoinStartResponse)
  return target;
}

size_t BytecoinStartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.bytecoin.BytecoinStartResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional bytes wallet_key = 1;
    if (has_wallet_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->wallet_key());
    }

    // optional bytes A_plus_sH = 2;
    if (has_a_plus_sh()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->a_plus_sh());
    }

    // optional bytes v_mul_A_plus_sH = 3;
    if (has_v_mul_a_plus_sh()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->v_mul_a_plus_sh());
    }

    // optional bytes view_public_key = 4;
    if (has_view_public_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->view_public_key());
    }

    // optional bytes debug_response = 5;
    if (has_debug_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->debug_response());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BytecoinStartResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.bytecoin.BytecoinStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BytecoinStartResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytecoinStartResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.bytecoin.BytecoinStartResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.bytecoin.BytecoinStartResponse)
    MergeFrom(*source);
  }
}

void BytecoinStartResponse::MergeFrom(const BytecoinStartResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.bytecoin.BytecoinStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_wallet_key();
      wallet_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wallet_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_a_plus_sh();
      a_plus_sh_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.a_plus_sh_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_v_mul_a_plus_sh();
      v_mul_a_plus_sh_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.v_mul_a_plus_sh_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_view_public_key();
      view_public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.view_public_key_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_debug_response();
      debug_response_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.debug_response_);
    }
  }
}

void BytecoinStartResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.bytecoin.BytecoinStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytecoinStartResponse::CopyFrom(const BytecoinStartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.bytecoin.BytecoinStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytecoinStartResponse::IsInitialized() const {
  return true;
}

void BytecoinStartResponse::Swap(BytecoinStartResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytecoinStartResponse::InternalSwap(BytecoinStartResponse* other) {
  using std::swap;
  wallet_key_.Swap(&other->wallet_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  a_plus_sh_.Swap(&other->a_plus_sh_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  v_mul_a_plus_sh_.Swap(&other->v_mul_a_plus_sh_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  view_public_key_.Swap(&other->view_public_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  debug_response_.Swap(&other->debug_response_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BytecoinStartResponse::GetMetadata() const {
  protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BytecoinScanOutputsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BytecoinScanOutputsRequest::kOutputPublicKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytecoinScanOutputsRequest::BytecoinScanOutputsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinScanOutputsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.bytecoin.BytecoinScanOutputsRequest)
}
BytecoinScanOutputsRequest::BytecoinScanOutputsRequest(const BytecoinScanOutputsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      output_public_key_(from.output_public_key_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.bytecoin.BytecoinScanOutputsRequest)
}

void BytecoinScanOutputsRequest::SharedCtor() {
}

BytecoinScanOutputsRequest::~BytecoinScanOutputsRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.bytecoin.BytecoinScanOutputsRequest)
  SharedDtor();
}

void BytecoinScanOutputsRequest::SharedDtor() {
}

void BytecoinScanOutputsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BytecoinScanOutputsRequest::descriptor() {
  ::protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytecoinScanOutputsRequest& BytecoinScanOutputsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinScanOutputsRequest.base);
  return *internal_default_instance();
}


void BytecoinScanOutputsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.bytecoin.BytecoinScanOutputsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  output_public_key_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BytecoinScanOutputsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.bytecoin.BytecoinScanOutputsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes output_public_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_output_public_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.bytecoin.BytecoinScanOutputsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.bytecoin.BytecoinScanOutputsRequest)
  return false;
#undef DO_
}

void BytecoinScanOutputsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.bytecoin.BytecoinScanOutputsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes output_public_key = 1;
  for (int i = 0, n = this->output_public_key_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->output_public_key(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.bytecoin.BytecoinScanOutputsRequest)
}

::google::protobuf::uint8* BytecoinScanOutputsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.bytecoin.BytecoinScanOutputsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes output_public_key = 1;
  for (int i = 0, n = this->output_public_key_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->output_public_key(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.bytecoin.BytecoinScanOutputsRequest)
  return target;
}

size_t BytecoinScanOutputsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.bytecoin.BytecoinScanOutputsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated bytes output_public_key = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->output_public_key_size());
  for (int i = 0, n = this->output_public_key_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->output_public_key(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BytecoinScanOutputsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.bytecoin.BytecoinScanOutputsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BytecoinScanOutputsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytecoinScanOutputsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.bytecoin.BytecoinScanOutputsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.bytecoin.BytecoinScanOutputsRequest)
    MergeFrom(*source);
  }
}

void BytecoinScanOutputsRequest::MergeFrom(const BytecoinScanOutputsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.bytecoin.BytecoinScanOutputsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output_public_key_.MergeFrom(from.output_public_key_);
}

void BytecoinScanOutputsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.bytecoin.BytecoinScanOutputsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytecoinScanOutputsRequest::CopyFrom(const BytecoinScanOutputsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.bytecoin.BytecoinScanOutputsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytecoinScanOutputsRequest::IsInitialized() const {
  return true;
}

void BytecoinScanOutputsRequest::Swap(BytecoinScanOutputsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytecoinScanOutputsRequest::InternalSwap(BytecoinScanOutputsRequest* other) {
  using std::swap;
  output_public_key_.InternalSwap(CastToBase(&other->output_public_key_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BytecoinScanOutputsRequest::GetMetadata() const {
  protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BytecoinScanOutputsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BytecoinScanOutputsResponse::kPvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytecoinScanOutputsResponse::BytecoinScanOutputsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinScanOutputsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.bytecoin.BytecoinScanOutputsResponse)
}
BytecoinScanOutputsResponse::BytecoinScanOutputsResponse(const BytecoinScanOutputsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      pv_(from.pv_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.bytecoin.BytecoinScanOutputsResponse)
}

void BytecoinScanOutputsResponse::SharedCtor() {
}

BytecoinScanOutputsResponse::~BytecoinScanOutputsResponse() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.bytecoin.BytecoinScanOutputsResponse)
  SharedDtor();
}

void BytecoinScanOutputsResponse::SharedDtor() {
}

void BytecoinScanOutputsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BytecoinScanOutputsResponse::descriptor() {
  ::protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytecoinScanOutputsResponse& BytecoinScanOutputsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinScanOutputsResponse.base);
  return *internal_default_instance();
}


void BytecoinScanOutputsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.bytecoin.BytecoinScanOutputsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pv_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BytecoinScanOutputsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.bytecoin.BytecoinScanOutputsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes Pv = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_pv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.bytecoin.BytecoinScanOutputsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.bytecoin.BytecoinScanOutputsResponse)
  return false;
#undef DO_
}

void BytecoinScanOutputsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.bytecoin.BytecoinScanOutputsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes Pv = 1;
  for (int i = 0, n = this->pv_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->pv(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.bytecoin.BytecoinScanOutputsResponse)
}

::google::protobuf::uint8* BytecoinScanOutputsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.bytecoin.BytecoinScanOutputsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes Pv = 1;
  for (int i = 0, n = this->pv_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->pv(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.bytecoin.BytecoinScanOutputsResponse)
  return target;
}

size_t BytecoinScanOutputsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.bytecoin.BytecoinScanOutputsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated bytes Pv = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pv_size());
  for (int i = 0, n = this->pv_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->pv(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BytecoinScanOutputsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.bytecoin.BytecoinScanOutputsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BytecoinScanOutputsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytecoinScanOutputsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.bytecoin.BytecoinScanOutputsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.bytecoin.BytecoinScanOutputsResponse)
    MergeFrom(*source);
  }
}

void BytecoinScanOutputsResponse::MergeFrom(const BytecoinScanOutputsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.bytecoin.BytecoinScanOutputsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pv_.MergeFrom(from.pv_);
}

void BytecoinScanOutputsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.bytecoin.BytecoinScanOutputsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytecoinScanOutputsResponse::CopyFrom(const BytecoinScanOutputsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.bytecoin.BytecoinScanOutputsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytecoinScanOutputsResponse::IsInitialized() const {
  return true;
}

void BytecoinScanOutputsResponse::Swap(BytecoinScanOutputsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytecoinScanOutputsResponse::InternalSwap(BytecoinScanOutputsResponse* other) {
  using std::swap;
  pv_.InternalSwap(CastToBase(&other->pv_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BytecoinScanOutputsResponse::GetMetadata() const {
  protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BytecoinGenerateKeyimageRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BytecoinGenerateKeyimageRequest::kOutputPublicKeyFieldNumber;
const int BytecoinGenerateKeyimageRequest::kInvOutputMainHashFieldNumber;
const int BytecoinGenerateKeyimageRequest::kAddressIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytecoinGenerateKeyimageRequest::BytecoinGenerateKeyimageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinGenerateKeyimageRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageRequest)
}
BytecoinGenerateKeyimageRequest::BytecoinGenerateKeyimageRequest(const BytecoinGenerateKeyimageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  output_public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_output_public_key()) {
    output_public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_public_key_);
  }
  inv_output_main_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_inv_output_main_hash()) {
    inv_output_main_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inv_output_main_hash_);
  }
  address_index_ = from.address_index_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageRequest)
}

void BytecoinGenerateKeyimageRequest::SharedCtor() {
  output_public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inv_output_main_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_index_ = 0u;
}

BytecoinGenerateKeyimageRequest::~BytecoinGenerateKeyimageRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageRequest)
  SharedDtor();
}

void BytecoinGenerateKeyimageRequest::SharedDtor() {
  output_public_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inv_output_main_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BytecoinGenerateKeyimageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BytecoinGenerateKeyimageRequest::descriptor() {
  ::protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytecoinGenerateKeyimageRequest& BytecoinGenerateKeyimageRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinGenerateKeyimageRequest.base);
  return *internal_default_instance();
}


void BytecoinGenerateKeyimageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      output_public_key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      inv_output_main_hash_.ClearNonDefaultToEmptyNoArena();
    }
  }
  address_index_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BytecoinGenerateKeyimageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes output_public_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_output_public_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes inv_output_main_hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_inv_output_main_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 address_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_address_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &address_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageRequest)
  return false;
#undef DO_
}

void BytecoinGenerateKeyimageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes output_public_key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->output_public_key(), output);
  }

  // optional bytes inv_output_main_hash = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->inv_output_main_hash(), output);
  }

  // optional uint32 address_index = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->address_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageRequest)
}

::google::protobuf::uint8* BytecoinGenerateKeyimageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes output_public_key = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->output_public_key(), target);
  }

  // optional bytes inv_output_main_hash = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->inv_output_main_hash(), target);
  }

  // optional uint32 address_index = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->address_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageRequest)
  return target;
}

size_t BytecoinGenerateKeyimageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes output_public_key = 1;
    if (has_output_public_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->output_public_key());
    }

    // optional bytes inv_output_main_hash = 2;
    if (has_inv_output_main_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->inv_output_main_hash());
    }

    // optional uint32 address_index = 3;
    if (has_address_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->address_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BytecoinGenerateKeyimageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BytecoinGenerateKeyimageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytecoinGenerateKeyimageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageRequest)
    MergeFrom(*source);
  }
}

void BytecoinGenerateKeyimageRequest::MergeFrom(const BytecoinGenerateKeyimageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_output_public_key();
      output_public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_public_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_inv_output_main_hash();
      inv_output_main_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inv_output_main_hash_);
    }
    if (cached_has_bits & 0x00000004u) {
      address_index_ = from.address_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BytecoinGenerateKeyimageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytecoinGenerateKeyimageRequest::CopyFrom(const BytecoinGenerateKeyimageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytecoinGenerateKeyimageRequest::IsInitialized() const {
  return true;
}

void BytecoinGenerateKeyimageRequest::Swap(BytecoinGenerateKeyimageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytecoinGenerateKeyimageRequest::InternalSwap(BytecoinGenerateKeyimageRequest* other) {
  using std::swap;
  output_public_key_.Swap(&other->output_public_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  inv_output_main_hash_.Swap(&other->inv_output_main_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(address_index_, other->address_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BytecoinGenerateKeyimageRequest::GetMetadata() const {
  protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BytecoinGenerateKeyimageResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BytecoinGenerateKeyimageResponse::kKeyimageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytecoinGenerateKeyimageResponse::BytecoinGenerateKeyimageResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinGenerateKeyimageResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageResponse)
}
BytecoinGenerateKeyimageResponse::BytecoinGenerateKeyimageResponse(const BytecoinGenerateKeyimageResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  keyimage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_keyimage()) {
    keyimage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyimage_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageResponse)
}

void BytecoinGenerateKeyimageResponse::SharedCtor() {
  keyimage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BytecoinGenerateKeyimageResponse::~BytecoinGenerateKeyimageResponse() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageResponse)
  SharedDtor();
}

void BytecoinGenerateKeyimageResponse::SharedDtor() {
  keyimage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BytecoinGenerateKeyimageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BytecoinGenerateKeyimageResponse::descriptor() {
  ::protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytecoinGenerateKeyimageResponse& BytecoinGenerateKeyimageResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinGenerateKeyimageResponse.base);
  return *internal_default_instance();
}


void BytecoinGenerateKeyimageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    keyimage_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BytecoinGenerateKeyimageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes keyimage = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_keyimage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageResponse)
  return false;
#undef DO_
}

void BytecoinGenerateKeyimageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes keyimage = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->keyimage(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageResponse)
}

::google::protobuf::uint8* BytecoinGenerateKeyimageResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes keyimage = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->keyimage(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageResponse)
  return target;
}

size_t BytecoinGenerateKeyimageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bytes keyimage = 1;
  if (has_keyimage()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->keyimage());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BytecoinGenerateKeyimageResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BytecoinGenerateKeyimageResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytecoinGenerateKeyimageResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageResponse)
    MergeFrom(*source);
  }
}

void BytecoinGenerateKeyimageResponse::MergeFrom(const BytecoinGenerateKeyimageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_keyimage()) {
    set_has_keyimage();
    keyimage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyimage_);
  }
}

void BytecoinGenerateKeyimageResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytecoinGenerateKeyimageResponse::CopyFrom(const BytecoinGenerateKeyimageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.bytecoin.BytecoinGenerateKeyimageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytecoinGenerateKeyimageResponse::IsInitialized() const {
  return true;
}

void BytecoinGenerateKeyimageResponse::Swap(BytecoinGenerateKeyimageResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytecoinGenerateKeyimageResponse::InternalSwap(BytecoinGenerateKeyimageResponse* other) {
  using std::swap;
  keyimage_.Swap(&other->keyimage_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BytecoinGenerateKeyimageResponse::GetMetadata() const {
  protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BytecoinGenerateOutputSeedRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BytecoinGenerateOutputSeedRequest::kTxInputsHashFieldNumber;
const int BytecoinGenerateOutputSeedRequest::kOutIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytecoinGenerateOutputSeedRequest::BytecoinGenerateOutputSeedRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinGenerateOutputSeedRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedRequest)
}
BytecoinGenerateOutputSeedRequest::BytecoinGenerateOutputSeedRequest(const BytecoinGenerateOutputSeedRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tx_inputs_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tx_inputs_hash()) {
    tx_inputs_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_inputs_hash_);
  }
  out_index_ = from.out_index_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedRequest)
}

void BytecoinGenerateOutputSeedRequest::SharedCtor() {
  tx_inputs_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  out_index_ = 0u;
}

BytecoinGenerateOutputSeedRequest::~BytecoinGenerateOutputSeedRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedRequest)
  SharedDtor();
}

void BytecoinGenerateOutputSeedRequest::SharedDtor() {
  tx_inputs_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BytecoinGenerateOutputSeedRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BytecoinGenerateOutputSeedRequest::descriptor() {
  ::protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytecoinGenerateOutputSeedRequest& BytecoinGenerateOutputSeedRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinGenerateOutputSeedRequest.base);
  return *internal_default_instance();
}


void BytecoinGenerateOutputSeedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    tx_inputs_hash_.ClearNonDefaultToEmptyNoArena();
  }
  out_index_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BytecoinGenerateOutputSeedRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes tx_inputs_hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_tx_inputs_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 out_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_out_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &out_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedRequest)
  return false;
#undef DO_
}

void BytecoinGenerateOutputSeedRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes tx_inputs_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->tx_inputs_hash(), output);
  }

  // optional uint32 out_index = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->out_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedRequest)
}

::google::protobuf::uint8* BytecoinGenerateOutputSeedRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes tx_inputs_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->tx_inputs_hash(), target);
  }

  // optional uint32 out_index = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->out_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedRequest)
  return target;
}

size_t BytecoinGenerateOutputSeedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes tx_inputs_hash = 1;
    if (has_tx_inputs_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->tx_inputs_hash());
    }

    // optional uint32 out_index = 3;
    if (has_out_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->out_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BytecoinGenerateOutputSeedRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BytecoinGenerateOutputSeedRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytecoinGenerateOutputSeedRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedRequest)
    MergeFrom(*source);
  }
}

void BytecoinGenerateOutputSeedRequest::MergeFrom(const BytecoinGenerateOutputSeedRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_tx_inputs_hash();
      tx_inputs_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_inputs_hash_);
    }
    if (cached_has_bits & 0x00000002u) {
      out_index_ = from.out_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BytecoinGenerateOutputSeedRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytecoinGenerateOutputSeedRequest::CopyFrom(const BytecoinGenerateOutputSeedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytecoinGenerateOutputSeedRequest::IsInitialized() const {
  return true;
}

void BytecoinGenerateOutputSeedRequest::Swap(BytecoinGenerateOutputSeedRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytecoinGenerateOutputSeedRequest::InternalSwap(BytecoinGenerateOutputSeedRequest* other) {
  using std::swap;
  tx_inputs_hash_.Swap(&other->tx_inputs_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(out_index_, other->out_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BytecoinGenerateOutputSeedRequest::GetMetadata() const {
  protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BytecoinGenerateOutputSeedResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BytecoinGenerateOutputSeedResponse::kOutputSeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytecoinGenerateOutputSeedResponse::BytecoinGenerateOutputSeedResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinGenerateOutputSeedResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedResponse)
}
BytecoinGenerateOutputSeedResponse::BytecoinGenerateOutputSeedResponse(const BytecoinGenerateOutputSeedResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  output_seed_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_output_seed()) {
    output_seed_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_seed_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedResponse)
}

void BytecoinGenerateOutputSeedResponse::SharedCtor() {
  output_seed_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BytecoinGenerateOutputSeedResponse::~BytecoinGenerateOutputSeedResponse() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedResponse)
  SharedDtor();
}

void BytecoinGenerateOutputSeedResponse::SharedDtor() {
  output_seed_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BytecoinGenerateOutputSeedResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BytecoinGenerateOutputSeedResponse::descriptor() {
  ::protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytecoinGenerateOutputSeedResponse& BytecoinGenerateOutputSeedResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinGenerateOutputSeedResponse.base);
  return *internal_default_instance();
}


void BytecoinGenerateOutputSeedResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    output_seed_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BytecoinGenerateOutputSeedResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes output_seed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_output_seed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedResponse)
  return false;
#undef DO_
}

void BytecoinGenerateOutputSeedResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes output_seed = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->output_seed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedResponse)
}

::google::protobuf::uint8* BytecoinGenerateOutputSeedResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes output_seed = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->output_seed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedResponse)
  return target;
}

size_t BytecoinGenerateOutputSeedResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bytes output_seed = 1;
  if (has_output_seed()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->output_seed());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BytecoinGenerateOutputSeedResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BytecoinGenerateOutputSeedResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytecoinGenerateOutputSeedResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedResponse)
    MergeFrom(*source);
  }
}

void BytecoinGenerateOutputSeedResponse::MergeFrom(const BytecoinGenerateOutputSeedResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_output_seed()) {
    set_has_output_seed();
    output_seed_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_seed_);
  }
}

void BytecoinGenerateOutputSeedResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytecoinGenerateOutputSeedResponse::CopyFrom(const BytecoinGenerateOutputSeedResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.bytecoin.BytecoinGenerateOutputSeedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytecoinGenerateOutputSeedResponse::IsInitialized() const {
  return true;
}

void BytecoinGenerateOutputSeedResponse::Swap(BytecoinGenerateOutputSeedResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytecoinGenerateOutputSeedResponse::InternalSwap(BytecoinGenerateOutputSeedResponse* other) {
  using std::swap;
  output_seed_.Swap(&other->output_seed_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BytecoinGenerateOutputSeedResponse::GetMetadata() const {
  protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BytecoinExportViewWalletRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytecoinExportViewWalletRequest::BytecoinExportViewWalletRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinExportViewWalletRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.bytecoin.BytecoinExportViewWalletRequest)
}
BytecoinExportViewWalletRequest::BytecoinExportViewWalletRequest(const BytecoinExportViewWalletRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.bytecoin.BytecoinExportViewWalletRequest)
}

void BytecoinExportViewWalletRequest::SharedCtor() {
}

BytecoinExportViewWalletRequest::~BytecoinExportViewWalletRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.bytecoin.BytecoinExportViewWalletRequest)
  SharedDtor();
}

void BytecoinExportViewWalletRequest::SharedDtor() {
}

void BytecoinExportViewWalletRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BytecoinExportViewWalletRequest::descriptor() {
  ::protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytecoinExportViewWalletRequest& BytecoinExportViewWalletRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinExportViewWalletRequest.base);
  return *internal_default_instance();
}


void BytecoinExportViewWalletRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.bytecoin.BytecoinExportViewWalletRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BytecoinExportViewWalletRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.bytecoin.BytecoinExportViewWalletRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.bytecoin.BytecoinExportViewWalletRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.bytecoin.BytecoinExportViewWalletRequest)
  return false;
#undef DO_
}

void BytecoinExportViewWalletRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.bytecoin.BytecoinExportViewWalletRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.bytecoin.BytecoinExportViewWalletRequest)
}

::google::protobuf::uint8* BytecoinExportViewWalletRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.bytecoin.BytecoinExportViewWalletRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.bytecoin.BytecoinExportViewWalletRequest)
  return target;
}

size_t BytecoinExportViewWalletRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.bytecoin.BytecoinExportViewWalletRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BytecoinExportViewWalletRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.bytecoin.BytecoinExportViewWalletRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BytecoinExportViewWalletRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytecoinExportViewWalletRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.bytecoin.BytecoinExportViewWalletRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.bytecoin.BytecoinExportViewWalletRequest)
    MergeFrom(*source);
  }
}

void BytecoinExportViewWalletRequest::MergeFrom(const BytecoinExportViewWalletRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.bytecoin.BytecoinExportViewWalletRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BytecoinExportViewWalletRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.bytecoin.BytecoinExportViewWalletRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytecoinExportViewWalletRequest::CopyFrom(const BytecoinExportViewWalletRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.bytecoin.BytecoinExportViewWalletRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytecoinExportViewWalletRequest::IsInitialized() const {
  return true;
}

void BytecoinExportViewWalletRequest::Swap(BytecoinExportViewWalletRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytecoinExportViewWalletRequest::InternalSwap(BytecoinExportViewWalletRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BytecoinExportViewWalletRequest::GetMetadata() const {
  protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BytecoinExportViewWalletResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BytecoinExportViewWalletResponse::kAuditKeyBaseSecretKeyFieldNumber;
const int BytecoinExportViewWalletResponse::kViewSecretKeyFieldNumber;
const int BytecoinExportViewWalletResponse::kTxDerivationSeedFieldNumber;
const int BytecoinExportViewWalletResponse::kViewSecretsSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytecoinExportViewWalletResponse::BytecoinExportViewWalletResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinExportViewWalletResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.bytecoin.BytecoinExportViewWalletResponse)
}
BytecoinExportViewWalletResponse::BytecoinExportViewWalletResponse(const BytecoinExportViewWalletResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  audit_key_base_secret_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_audit_key_base_secret_key()) {
    audit_key_base_secret_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audit_key_base_secret_key_);
  }
  view_secret_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_view_secret_key()) {
    view_secret_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.view_secret_key_);
  }
  tx_derivation_seed_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tx_derivation_seed()) {
    tx_derivation_seed_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_derivation_seed_);
  }
  view_secrets_signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_view_secrets_signature()) {
    view_secrets_signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.view_secrets_signature_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.bytecoin.BytecoinExportViewWalletResponse)
}

void BytecoinExportViewWalletResponse::SharedCtor() {
  audit_key_base_secret_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  view_secret_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tx_derivation_seed_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  view_secrets_signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BytecoinExportViewWalletResponse::~BytecoinExportViewWalletResponse() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.bytecoin.BytecoinExportViewWalletResponse)
  SharedDtor();
}

void BytecoinExportViewWalletResponse::SharedDtor() {
  audit_key_base_secret_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  view_secret_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tx_derivation_seed_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  view_secrets_signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BytecoinExportViewWalletResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BytecoinExportViewWalletResponse::descriptor() {
  ::protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytecoinExportViewWalletResponse& BytecoinExportViewWalletResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinExportViewWalletResponse.base);
  return *internal_default_instance();
}


void BytecoinExportViewWalletResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.bytecoin.BytecoinExportViewWalletResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      audit_key_base_secret_key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      view_secret_key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      tx_derivation_seed_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      view_secrets_signature_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BytecoinExportViewWalletResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.bytecoin.BytecoinExportViewWalletResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes audit_key_base_secret_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_audit_key_base_secret_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes view_secret_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_view_secret_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes tx_derivation_seed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_tx_derivation_seed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes view_secrets_signature = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_view_secrets_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.bytecoin.BytecoinExportViewWalletResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.bytecoin.BytecoinExportViewWalletResponse)
  return false;
#undef DO_
}

void BytecoinExportViewWalletResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.bytecoin.BytecoinExportViewWalletResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes audit_key_base_secret_key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->audit_key_base_secret_key(), output);
  }

  // optional bytes view_secret_key = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->view_secret_key(), output);
  }

  // optional bytes tx_derivation_seed = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->tx_derivation_seed(), output);
  }

  // optional bytes view_secrets_signature = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->view_secrets_signature(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.bytecoin.BytecoinExportViewWalletResponse)
}

::google::protobuf::uint8* BytecoinExportViewWalletResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.bytecoin.BytecoinExportViewWalletResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes audit_key_base_secret_key = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->audit_key_base_secret_key(), target);
  }

  // optional bytes view_secret_key = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->view_secret_key(), target);
  }

  // optional bytes tx_derivation_seed = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->tx_derivation_seed(), target);
  }

  // optional bytes view_secrets_signature = 4;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->view_secrets_signature(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.bytecoin.BytecoinExportViewWalletResponse)
  return target;
}

size_t BytecoinExportViewWalletResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.bytecoin.BytecoinExportViewWalletResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional bytes audit_key_base_secret_key = 1;
    if (has_audit_key_base_secret_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->audit_key_base_secret_key());
    }

    // optional bytes view_secret_key = 2;
    if (has_view_secret_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->view_secret_key());
    }

    // optional bytes tx_derivation_seed = 3;
    if (has_tx_derivation_seed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->tx_derivation_seed());
    }

    // optional bytes view_secrets_signature = 4;
    if (has_view_secrets_signature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->view_secrets_signature());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BytecoinExportViewWalletResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.bytecoin.BytecoinExportViewWalletResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BytecoinExportViewWalletResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytecoinExportViewWalletResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.bytecoin.BytecoinExportViewWalletResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.bytecoin.BytecoinExportViewWalletResponse)
    MergeFrom(*source);
  }
}

void BytecoinExportViewWalletResponse::MergeFrom(const BytecoinExportViewWalletResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.bytecoin.BytecoinExportViewWalletResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_audit_key_base_secret_key();
      audit_key_base_secret_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audit_key_base_secret_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_view_secret_key();
      view_secret_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.view_secret_key_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_tx_derivation_seed();
      tx_derivation_seed_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_derivation_seed_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_view_secrets_signature();
      view_secrets_signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.view_secrets_signature_);
    }
  }
}

void BytecoinExportViewWalletResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.bytecoin.BytecoinExportViewWalletResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytecoinExportViewWalletResponse::CopyFrom(const BytecoinExportViewWalletResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.bytecoin.BytecoinExportViewWalletResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytecoinExportViewWalletResponse::IsInitialized() const {
  return true;
}

void BytecoinExportViewWalletResponse::Swap(BytecoinExportViewWalletResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytecoinExportViewWalletResponse::InternalSwap(BytecoinExportViewWalletResponse* other) {
  using std::swap;
  audit_key_base_secret_key_.Swap(&other->audit_key_base_secret_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  view_secret_key_.Swap(&other->view_secret_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tx_derivation_seed_.Swap(&other->tx_derivation_seed_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  view_secrets_signature_.Swap(&other->view_secrets_signature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BytecoinExportViewWalletResponse::GetMetadata() const {
  protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BytecoinSignStartRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BytecoinSignStartRequest::kVersionFieldNumber;
const int BytecoinSignStartRequest::kUtFieldNumber;
const int BytecoinSignStartRequest::kInputsSizeFieldNumber;
const int BytecoinSignStartRequest::kOutputsSizeFieldNumber;
const int BytecoinSignStartRequest::kExtraSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytecoinSignStartRequest::BytecoinSignStartRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinSignStartRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.bytecoin.BytecoinSignStartRequest)
}
BytecoinSignStartRequest::BytecoinSignStartRequest(const BytecoinSignStartRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ut_, &from.ut_,
    static_cast<size_t>(reinterpret_cast<char*>(&extra_size_) -
    reinterpret_cast<char*>(&ut_)) + sizeof(extra_size_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.bytecoin.BytecoinSignStartRequest)
}

void BytecoinSignStartRequest::SharedCtor() {
  ::memset(&ut_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&extra_size_) -
      reinterpret_cast<char*>(&ut_)) + sizeof(extra_size_));
}

BytecoinSignStartRequest::~BytecoinSignStartRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.bytecoin.BytecoinSignStartRequest)
  SharedDtor();
}

void BytecoinSignStartRequest::SharedDtor() {
}

void BytecoinSignStartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BytecoinSignStartRequest::descriptor() {
  ::protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytecoinSignStartRequest& BytecoinSignStartRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinSignStartRequest.base);
  return *internal_default_instance();
}


void BytecoinSignStartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.bytecoin.BytecoinSignStartRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&ut_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&extra_size_) -
        reinterpret_cast<char*>(&ut_)) + sizeof(extra_size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BytecoinSignStartRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.bytecoin.BytecoinSignStartRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 ut = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ut();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ut_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 inputs_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_inputs_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &inputs_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 outputs_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_outputs_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &outputs_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 extra_size = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_extra_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &extra_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.bytecoin.BytecoinSignStartRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.bytecoin.BytecoinSignStartRequest)
  return false;
#undef DO_
}

void BytecoinSignStartRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.bytecoin.BytecoinSignStartRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // optional uint64 ut = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->ut(), output);
  }

  // optional uint32 inputs_size = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->inputs_size(), output);
  }

  // optional uint32 outputs_size = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->outputs_size(), output);
  }

  // optional uint32 extra_size = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->extra_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.bytecoin.BytecoinSignStartRequest)
}

::google::protobuf::uint8* BytecoinSignStartRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.bytecoin.BytecoinSignStartRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // optional uint64 ut = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->ut(), target);
  }

  // optional uint32 inputs_size = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->inputs_size(), target);
  }

  // optional uint32 outputs_size = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->outputs_size(), target);
  }

  // optional uint32 extra_size = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->extra_size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.bytecoin.BytecoinSignStartRequest)
  return target;
}

size_t BytecoinSignStartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.bytecoin.BytecoinSignStartRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional uint64 ut = 2;
    if (has_ut()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->ut());
    }

    // optional uint32 version = 1;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional uint32 inputs_size = 3;
    if (has_inputs_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->inputs_size());
    }

    // optional uint32 outputs_size = 4;
    if (has_outputs_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->outputs_size());
    }

    // optional uint32 extra_size = 5;
    if (has_extra_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->extra_size());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BytecoinSignStartRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.bytecoin.BytecoinSignStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BytecoinSignStartRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytecoinSignStartRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.bytecoin.BytecoinSignStartRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.bytecoin.BytecoinSignStartRequest)
    MergeFrom(*source);
  }
}

void BytecoinSignStartRequest::MergeFrom(const BytecoinSignStartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.bytecoin.BytecoinSignStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      ut_ = from.ut_;
    }
    if (cached_has_bits & 0x00000002u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000004u) {
      inputs_size_ = from.inputs_size_;
    }
    if (cached_has_bits & 0x00000008u) {
      outputs_size_ = from.outputs_size_;
    }
    if (cached_has_bits & 0x00000010u) {
      extra_size_ = from.extra_size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BytecoinSignStartRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.bytecoin.BytecoinSignStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytecoinSignStartRequest::CopyFrom(const BytecoinSignStartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.bytecoin.BytecoinSignStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytecoinSignStartRequest::IsInitialized() const {
  return true;
}

void BytecoinSignStartRequest::Swap(BytecoinSignStartRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytecoinSignStartRequest::InternalSwap(BytecoinSignStartRequest* other) {
  using std::swap;
  swap(ut_, other->ut_);
  swap(version_, other->version_);
  swap(inputs_size_, other->inputs_size_);
  swap(outputs_size_, other->outputs_size_);
  swap(extra_size_, other->extra_size_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BytecoinSignStartRequest::GetMetadata() const {
  protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BytecoinEmptyResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytecoinEmptyResponse::BytecoinEmptyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinEmptyResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.bytecoin.BytecoinEmptyResponse)
}
BytecoinEmptyResponse::BytecoinEmptyResponse(const BytecoinEmptyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.bytecoin.BytecoinEmptyResponse)
}

void BytecoinEmptyResponse::SharedCtor() {
}

BytecoinEmptyResponse::~BytecoinEmptyResponse() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.bytecoin.BytecoinEmptyResponse)
  SharedDtor();
}

void BytecoinEmptyResponse::SharedDtor() {
}

void BytecoinEmptyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BytecoinEmptyResponse::descriptor() {
  ::protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytecoinEmptyResponse& BytecoinEmptyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinEmptyResponse.base);
  return *internal_default_instance();
}


void BytecoinEmptyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.bytecoin.BytecoinEmptyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BytecoinEmptyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.bytecoin.BytecoinEmptyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.bytecoin.BytecoinEmptyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.bytecoin.BytecoinEmptyResponse)
  return false;
#undef DO_
}

void BytecoinEmptyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.bytecoin.BytecoinEmptyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.bytecoin.BytecoinEmptyResponse)
}

::google::protobuf::uint8* BytecoinEmptyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.bytecoin.BytecoinEmptyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.bytecoin.BytecoinEmptyResponse)
  return target;
}

size_t BytecoinEmptyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.bytecoin.BytecoinEmptyResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BytecoinEmptyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.bytecoin.BytecoinEmptyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BytecoinEmptyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytecoinEmptyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.bytecoin.BytecoinEmptyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.bytecoin.BytecoinEmptyResponse)
    MergeFrom(*source);
  }
}

void BytecoinEmptyResponse::MergeFrom(const BytecoinEmptyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.bytecoin.BytecoinEmptyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BytecoinEmptyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.bytecoin.BytecoinEmptyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytecoinEmptyResponse::CopyFrom(const BytecoinEmptyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.bytecoin.BytecoinEmptyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytecoinEmptyResponse::IsInitialized() const {
  return true;
}

void BytecoinEmptyResponse::Swap(BytecoinEmptyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytecoinEmptyResponse::InternalSwap(BytecoinEmptyResponse* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BytecoinEmptyResponse::GetMetadata() const {
  protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BytecoinSignAddInputRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BytecoinSignAddInputRequest::kAmountFieldNumber;
const int BytecoinSignAddInputRequest::kOutputIndexesFieldNumber;
const int BytecoinSignAddInputRequest::kInvOutputMainHashFieldNumber;
const int BytecoinSignAddInputRequest::kAddressIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytecoinSignAddInputRequest::BytecoinSignAddInputRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinSignAddInputRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.bytecoin.BytecoinSignAddInputRequest)
}
BytecoinSignAddInputRequest::BytecoinSignAddInputRequest(const BytecoinSignAddInputRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      output_indexes_(from.output_indexes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  inv_output_main_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_inv_output_main_hash()) {
    inv_output_main_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inv_output_main_hash_);
  }
  ::memcpy(&amount_, &from.amount_,
    static_cast<size_t>(reinterpret_cast<char*>(&address_index_) -
    reinterpret_cast<char*>(&amount_)) + sizeof(address_index_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.bytecoin.BytecoinSignAddInputRequest)
}

void BytecoinSignAddInputRequest::SharedCtor() {
  inv_output_main_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&address_index_) -
      reinterpret_cast<char*>(&amount_)) + sizeof(address_index_));
}

BytecoinSignAddInputRequest::~BytecoinSignAddInputRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.bytecoin.BytecoinSignAddInputRequest)
  SharedDtor();
}

void BytecoinSignAddInputRequest::SharedDtor() {
  inv_output_main_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BytecoinSignAddInputRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BytecoinSignAddInputRequest::descriptor() {
  ::protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytecoinSignAddInputRequest& BytecoinSignAddInputRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinSignAddInputRequest.base);
  return *internal_default_instance();
}


void BytecoinSignAddInputRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.bytecoin.BytecoinSignAddInputRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  output_indexes_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    inv_output_main_hash_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&amount_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&address_index_) -
        reinterpret_cast<char*>(&amount_)) + sizeof(address_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BytecoinSignAddInputRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.bytecoin.BytecoinSignAddInputRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 amount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_amount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 output_indexes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_output_indexes())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_output_indexes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes inv_output_main_hash = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_inv_output_main_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 address_index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_address_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &address_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.bytecoin.BytecoinSignAddInputRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.bytecoin.BytecoinSignAddInputRequest)
  return false;
#undef DO_
}

void BytecoinSignAddInputRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.bytecoin.BytecoinSignAddInputRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 amount = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->amount(), output);
  }

  // repeated uint32 output_indexes = 2;
  for (int i = 0, n = this->output_indexes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->output_indexes(i), output);
  }

  // optional bytes inv_output_main_hash = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->inv_output_main_hash(), output);
  }

  // optional uint32 address_index = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->address_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.bytecoin.BytecoinSignAddInputRequest)
}

::google::protobuf::uint8* BytecoinSignAddInputRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.bytecoin.BytecoinSignAddInputRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 amount = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->amount(), target);
  }

  // repeated uint32 output_indexes = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->output_indexes_, target);

  // optional bytes inv_output_main_hash = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->inv_output_main_hash(), target);
  }

  // optional uint32 address_index = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->address_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.bytecoin.BytecoinSignAddInputRequest)
  return target;
}

size_t BytecoinSignAddInputRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.bytecoin.BytecoinSignAddInputRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 output_indexes = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->output_indexes_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->output_indexes_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes inv_output_main_hash = 3;
    if (has_inv_output_main_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->inv_output_main_hash());
    }

    // optional uint64 amount = 1;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->amount());
    }

    // optional uint32 address_index = 4;
    if (has_address_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->address_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BytecoinSignAddInputRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.bytecoin.BytecoinSignAddInputRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BytecoinSignAddInputRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytecoinSignAddInputRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.bytecoin.BytecoinSignAddInputRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.bytecoin.BytecoinSignAddInputRequest)
    MergeFrom(*source);
  }
}

void BytecoinSignAddInputRequest::MergeFrom(const BytecoinSignAddInputRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.bytecoin.BytecoinSignAddInputRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output_indexes_.MergeFrom(from.output_indexes_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_inv_output_main_hash();
      inv_output_main_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inv_output_main_hash_);
    }
    if (cached_has_bits & 0x00000002u) {
      amount_ = from.amount_;
    }
    if (cached_has_bits & 0x00000004u) {
      address_index_ = from.address_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BytecoinSignAddInputRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.bytecoin.BytecoinSignAddInputRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytecoinSignAddInputRequest::CopyFrom(const BytecoinSignAddInputRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.bytecoin.BytecoinSignAddInputRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytecoinSignAddInputRequest::IsInitialized() const {
  return true;
}

void BytecoinSignAddInputRequest::Swap(BytecoinSignAddInputRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytecoinSignAddInputRequest::InternalSwap(BytecoinSignAddInputRequest* other) {
  using std::swap;
  output_indexes_.InternalSwap(&other->output_indexes_);
  inv_output_main_hash_.Swap(&other->inv_output_main_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(amount_, other->amount_);
  swap(address_index_, other->address_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BytecoinSignAddInputRequest::GetMetadata() const {
  protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BytecoinSignAddOutputRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BytecoinSignAddOutputRequest::kChangeFieldNumber;
const int BytecoinSignAddOutputRequest::kAmountFieldNumber;
const int BytecoinSignAddOutputRequest::kDstAddressTagFieldNumber;
const int BytecoinSignAddOutputRequest::kDstAddressSFieldNumber;
const int BytecoinSignAddOutputRequest::kDstAddressSvFieldNumber;
const int BytecoinSignAddOutputRequest::kChangeAddressIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytecoinSignAddOutputRequest::BytecoinSignAddOutputRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinSignAddOutputRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.bytecoin.BytecoinSignAddOutputRequest)
}
BytecoinSignAddOutputRequest::BytecoinSignAddOutputRequest(const BytecoinSignAddOutputRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dst_address_s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dst_address_s()) {
    dst_address_s_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dst_address_s_);
  }
  dst_address_sv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dst_address_sv()) {
    dst_address_sv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dst_address_sv_);
  }
  ::memcpy(&amount_, &from.amount_,
    static_cast<size_t>(reinterpret_cast<char*>(&change_address_index_) -
    reinterpret_cast<char*>(&amount_)) + sizeof(change_address_index_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.bytecoin.BytecoinSignAddOutputRequest)
}

void BytecoinSignAddOutputRequest::SharedCtor() {
  dst_address_s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dst_address_sv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&change_address_index_) -
      reinterpret_cast<char*>(&amount_)) + sizeof(change_address_index_));
}

BytecoinSignAddOutputRequest::~BytecoinSignAddOutputRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.bytecoin.BytecoinSignAddOutputRequest)
  SharedDtor();
}

void BytecoinSignAddOutputRequest::SharedDtor() {
  dst_address_s_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dst_address_sv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BytecoinSignAddOutputRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BytecoinSignAddOutputRequest::descriptor() {
  ::protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytecoinSignAddOutputRequest& BytecoinSignAddOutputRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinSignAddOutputRequest.base);
  return *internal_default_instance();
}


void BytecoinSignAddOutputRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.bytecoin.BytecoinSignAddOutputRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      dst_address_s_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      dst_address_sv_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 60u) {
    ::memset(&amount_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&change_address_index_) -
        reinterpret_cast<char*>(&amount_)) + sizeof(change_address_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BytecoinSignAddOutputRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.bytecoin.BytecoinSignAddOutputRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool change = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_change();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &change_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 amount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_amount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 dst_address_tag = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_dst_address_tag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dst_address_tag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes dst_address_S = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_dst_address_s()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes dst_address_Sv = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_dst_address_sv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 change_address_index = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_change_address_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &change_address_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.bytecoin.BytecoinSignAddOutputRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.bytecoin.BytecoinSignAddOutputRequest)
  return false;
#undef DO_
}

void BytecoinSignAddOutputRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.bytecoin.BytecoinSignAddOutputRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool change = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->change(), output);
  }

  // optional uint64 amount = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->amount(), output);
  }

  // optional uint32 dst_address_tag = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->dst_address_tag(), output);
  }

  // optional bytes dst_address_S = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->dst_address_s(), output);
  }

  // optional bytes dst_address_Sv = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->dst_address_sv(), output);
  }

  // optional uint32 change_address_index = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->change_address_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.bytecoin.BytecoinSignAddOutputRequest)
}

::google::protobuf::uint8* BytecoinSignAddOutputRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.bytecoin.BytecoinSignAddOutputRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool change = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->change(), target);
  }

  // optional uint64 amount = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->amount(), target);
  }

  // optional uint32 dst_address_tag = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->dst_address_tag(), target);
  }

  // optional bytes dst_address_S = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->dst_address_s(), target);
  }

  // optional bytes dst_address_Sv = 5;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->dst_address_sv(), target);
  }

  // optional uint32 change_address_index = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->change_address_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.bytecoin.BytecoinSignAddOutputRequest)
  return target;
}

size_t BytecoinSignAddOutputRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.bytecoin.BytecoinSignAddOutputRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes dst_address_S = 4;
    if (has_dst_address_s()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->dst_address_s());
    }

    // optional bytes dst_address_Sv = 5;
    if (has_dst_address_sv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->dst_address_sv());
    }

    // optional uint64 amount = 2;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->amount());
    }

    // optional bool change = 1;
    if (has_change()) {
      total_size += 1 + 1;
    }

    // optional uint32 dst_address_tag = 3;
    if (has_dst_address_tag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dst_address_tag());
    }

    // optional uint32 change_address_index = 6;
    if (has_change_address_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->change_address_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BytecoinSignAddOutputRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.bytecoin.BytecoinSignAddOutputRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BytecoinSignAddOutputRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytecoinSignAddOutputRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.bytecoin.BytecoinSignAddOutputRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.bytecoin.BytecoinSignAddOutputRequest)
    MergeFrom(*source);
  }
}

void BytecoinSignAddOutputRequest::MergeFrom(const BytecoinSignAddOutputRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.bytecoin.BytecoinSignAddOutputRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_dst_address_s();
      dst_address_s_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dst_address_s_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_dst_address_sv();
      dst_address_sv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dst_address_sv_);
    }
    if (cached_has_bits & 0x00000004u) {
      amount_ = from.amount_;
    }
    if (cached_has_bits & 0x00000008u) {
      change_ = from.change_;
    }
    if (cached_has_bits & 0x00000010u) {
      dst_address_tag_ = from.dst_address_tag_;
    }
    if (cached_has_bits & 0x00000020u) {
      change_address_index_ = from.change_address_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BytecoinSignAddOutputRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.bytecoin.BytecoinSignAddOutputRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytecoinSignAddOutputRequest::CopyFrom(const BytecoinSignAddOutputRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.bytecoin.BytecoinSignAddOutputRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytecoinSignAddOutputRequest::IsInitialized() const {
  return true;
}

void BytecoinSignAddOutputRequest::Swap(BytecoinSignAddOutputRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytecoinSignAddOutputRequest::InternalSwap(BytecoinSignAddOutputRequest* other) {
  using std::swap;
  dst_address_s_.Swap(&other->dst_address_s_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  dst_address_sv_.Swap(&other->dst_address_sv_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(amount_, other->amount_);
  swap(change_, other->change_);
  swap(dst_address_tag_, other->dst_address_tag_);
  swap(change_address_index_, other->change_address_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BytecoinSignAddOutputRequest::GetMetadata() const {
  protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BytecoinSignAddOutputResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BytecoinSignAddOutputResponse::kPublicKeyFieldNumber;
const int BytecoinSignAddOutputResponse::kEncryptedSecretFieldNumber;
const int BytecoinSignAddOutputResponse::kEncryptedAddressTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytecoinSignAddOutputResponse::BytecoinSignAddOutputResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinSignAddOutputResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.bytecoin.BytecoinSignAddOutputResponse)
}
BytecoinSignAddOutputResponse::BytecoinSignAddOutputResponse(const BytecoinSignAddOutputResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_public_key()) {
    public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
  encrypted_secret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_encrypted_secret()) {
    encrypted_secret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encrypted_secret_);
  }
  encrypted_address_type_ = from.encrypted_address_type_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.bytecoin.BytecoinSignAddOutputResponse)
}

void BytecoinSignAddOutputResponse::SharedCtor() {
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encrypted_secret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encrypted_address_type_ = 0u;
}

BytecoinSignAddOutputResponse::~BytecoinSignAddOutputResponse() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.bytecoin.BytecoinSignAddOutputResponse)
  SharedDtor();
}

void BytecoinSignAddOutputResponse::SharedDtor() {
  public_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encrypted_secret_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BytecoinSignAddOutputResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BytecoinSignAddOutputResponse::descriptor() {
  ::protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytecoinSignAddOutputResponse& BytecoinSignAddOutputResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinSignAddOutputResponse.base);
  return *internal_default_instance();
}


void BytecoinSignAddOutputResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.bytecoin.BytecoinSignAddOutputResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      public_key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      encrypted_secret_.ClearNonDefaultToEmptyNoArena();
    }
  }
  encrypted_address_type_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BytecoinSignAddOutputResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.bytecoin.BytecoinSignAddOutputResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes public_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_public_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes encrypted_secret = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_encrypted_secret()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 encrypted_address_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_encrypted_address_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &encrypted_address_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.bytecoin.BytecoinSignAddOutputResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.bytecoin.BytecoinSignAddOutputResponse)
  return false;
#undef DO_
}

void BytecoinSignAddOutputResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.bytecoin.BytecoinSignAddOutputResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes public_key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->public_key(), output);
  }

  // optional bytes encrypted_secret = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->encrypted_secret(), output);
  }

  // optional uint32 encrypted_address_type = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->encrypted_address_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.bytecoin.BytecoinSignAddOutputResponse)
}

::google::protobuf::uint8* BytecoinSignAddOutputResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.bytecoin.BytecoinSignAddOutputResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes public_key = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->public_key(), target);
  }

  // optional bytes encrypted_secret = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->encrypted_secret(), target);
  }

  // optional uint32 encrypted_address_type = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->encrypted_address_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.bytecoin.BytecoinSignAddOutputResponse)
  return target;
}

size_t BytecoinSignAddOutputResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.bytecoin.BytecoinSignAddOutputResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes public_key = 1;
    if (has_public_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->public_key());
    }

    // optional bytes encrypted_secret = 2;
    if (has_encrypted_secret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->encrypted_secret());
    }

    // optional uint32 encrypted_address_type = 3;
    if (has_encrypted_address_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->encrypted_address_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BytecoinSignAddOutputResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.bytecoin.BytecoinSignAddOutputResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BytecoinSignAddOutputResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytecoinSignAddOutputResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.bytecoin.BytecoinSignAddOutputResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.bytecoin.BytecoinSignAddOutputResponse)
    MergeFrom(*source);
  }
}

void BytecoinSignAddOutputResponse::MergeFrom(const BytecoinSignAddOutputResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.bytecoin.BytecoinSignAddOutputResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_public_key();
      public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_encrypted_secret();
      encrypted_secret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encrypted_secret_);
    }
    if (cached_has_bits & 0x00000004u) {
      encrypted_address_type_ = from.encrypted_address_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BytecoinSignAddOutputResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.bytecoin.BytecoinSignAddOutputResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytecoinSignAddOutputResponse::CopyFrom(const BytecoinSignAddOutputResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.bytecoin.BytecoinSignAddOutputResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytecoinSignAddOutputResponse::IsInitialized() const {
  return true;
}

void BytecoinSignAddOutputResponse::Swap(BytecoinSignAddOutputResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytecoinSignAddOutputResponse::InternalSwap(BytecoinSignAddOutputResponse* other) {
  using std::swap;
  public_key_.Swap(&other->public_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  encrypted_secret_.Swap(&other->encrypted_secret_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(encrypted_address_type_, other->encrypted_address_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BytecoinSignAddOutputResponse::GetMetadata() const {
  protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BytecoinSignAddExtraRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BytecoinSignAddExtraRequest::kExtraChunkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytecoinSignAddExtraRequest::BytecoinSignAddExtraRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinSignAddExtraRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.bytecoin.BytecoinSignAddExtraRequest)
}
BytecoinSignAddExtraRequest::BytecoinSignAddExtraRequest(const BytecoinSignAddExtraRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  extra_chunk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_extra_chunk()) {
    extra_chunk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_chunk_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.bytecoin.BytecoinSignAddExtraRequest)
}

void BytecoinSignAddExtraRequest::SharedCtor() {
  extra_chunk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BytecoinSignAddExtraRequest::~BytecoinSignAddExtraRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.bytecoin.BytecoinSignAddExtraRequest)
  SharedDtor();
}

void BytecoinSignAddExtraRequest::SharedDtor() {
  extra_chunk_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BytecoinSignAddExtraRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BytecoinSignAddExtraRequest::descriptor() {
  ::protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytecoinSignAddExtraRequest& BytecoinSignAddExtraRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinSignAddExtraRequest.base);
  return *internal_default_instance();
}


void BytecoinSignAddExtraRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.bytecoin.BytecoinSignAddExtraRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    extra_chunk_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BytecoinSignAddExtraRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.bytecoin.BytecoinSignAddExtraRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes extra_chunk = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_extra_chunk()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.bytecoin.BytecoinSignAddExtraRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.bytecoin.BytecoinSignAddExtraRequest)
  return false;
#undef DO_
}

void BytecoinSignAddExtraRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.bytecoin.BytecoinSignAddExtraRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes extra_chunk = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->extra_chunk(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.bytecoin.BytecoinSignAddExtraRequest)
}

::google::protobuf::uint8* BytecoinSignAddExtraRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.bytecoin.BytecoinSignAddExtraRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes extra_chunk = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->extra_chunk(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.bytecoin.BytecoinSignAddExtraRequest)
  return target;
}

size_t BytecoinSignAddExtraRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.bytecoin.BytecoinSignAddExtraRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bytes extra_chunk = 1;
  if (has_extra_chunk()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->extra_chunk());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BytecoinSignAddExtraRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.bytecoin.BytecoinSignAddExtraRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BytecoinSignAddExtraRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytecoinSignAddExtraRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.bytecoin.BytecoinSignAddExtraRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.bytecoin.BytecoinSignAddExtraRequest)
    MergeFrom(*source);
  }
}

void BytecoinSignAddExtraRequest::MergeFrom(const BytecoinSignAddExtraRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.bytecoin.BytecoinSignAddExtraRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_extra_chunk()) {
    set_has_extra_chunk();
    extra_chunk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_chunk_);
  }
}

void BytecoinSignAddExtraRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.bytecoin.BytecoinSignAddExtraRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytecoinSignAddExtraRequest::CopyFrom(const BytecoinSignAddExtraRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.bytecoin.BytecoinSignAddExtraRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytecoinSignAddExtraRequest::IsInitialized() const {
  return true;
}

void BytecoinSignAddExtraRequest::Swap(BytecoinSignAddExtraRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytecoinSignAddExtraRequest::InternalSwap(BytecoinSignAddExtraRequest* other) {
  using std::swap;
  extra_chunk_.Swap(&other->extra_chunk_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BytecoinSignAddExtraRequest::GetMetadata() const {
  protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BytecoinSignStepARequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BytecoinSignStepARequest::kInvOutputMainHashFieldNumber;
const int BytecoinSignStepARequest::kAddressIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytecoinSignStepARequest::BytecoinSignStepARequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinSignStepARequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.bytecoin.BytecoinSignStepARequest)
}
BytecoinSignStepARequest::BytecoinSignStepARequest(const BytecoinSignStepARequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  inv_output_main_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_inv_output_main_hash()) {
    inv_output_main_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inv_output_main_hash_);
  }
  address_index_ = from.address_index_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.bytecoin.BytecoinSignStepARequest)
}

void BytecoinSignStepARequest::SharedCtor() {
  inv_output_main_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_index_ = GOOGLE_ULONGLONG(0);
}

BytecoinSignStepARequest::~BytecoinSignStepARequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.bytecoin.BytecoinSignStepARequest)
  SharedDtor();
}

void BytecoinSignStepARequest::SharedDtor() {
  inv_output_main_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BytecoinSignStepARequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BytecoinSignStepARequest::descriptor() {
  ::protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytecoinSignStepARequest& BytecoinSignStepARequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinSignStepARequest.base);
  return *internal_default_instance();
}


void BytecoinSignStepARequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.bytecoin.BytecoinSignStepARequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    inv_output_main_hash_.ClearNonDefaultToEmptyNoArena();
  }
  address_index_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BytecoinSignStepARequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.bytecoin.BytecoinSignStepARequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes inv_output_main_hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_inv_output_main_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 address_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_address_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &address_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.bytecoin.BytecoinSignStepARequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.bytecoin.BytecoinSignStepARequest)
  return false;
#undef DO_
}

void BytecoinSignStepARequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.bytecoin.BytecoinSignStepARequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes inv_output_main_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->inv_output_main_hash(), output);
  }

  // optional uint64 address_index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->address_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.bytecoin.BytecoinSignStepARequest)
}

::google::protobuf::uint8* BytecoinSignStepARequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.bytecoin.BytecoinSignStepARequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes inv_output_main_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->inv_output_main_hash(), target);
  }

  // optional uint64 address_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->address_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.bytecoin.BytecoinSignStepARequest)
  return target;
}

size_t BytecoinSignStepARequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.bytecoin.BytecoinSignStepARequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes inv_output_main_hash = 1;
    if (has_inv_output_main_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->inv_output_main_hash());
    }

    // optional uint64 address_index = 2;
    if (has_address_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->address_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BytecoinSignStepARequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.bytecoin.BytecoinSignStepARequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BytecoinSignStepARequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytecoinSignStepARequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.bytecoin.BytecoinSignStepARequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.bytecoin.BytecoinSignStepARequest)
    MergeFrom(*source);
  }
}

void BytecoinSignStepARequest::MergeFrom(const BytecoinSignStepARequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.bytecoin.BytecoinSignStepARequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_inv_output_main_hash();
      inv_output_main_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inv_output_main_hash_);
    }
    if (cached_has_bits & 0x00000002u) {
      address_index_ = from.address_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BytecoinSignStepARequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.bytecoin.BytecoinSignStepARequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytecoinSignStepARequest::CopyFrom(const BytecoinSignStepARequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.bytecoin.BytecoinSignStepARequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytecoinSignStepARequest::IsInitialized() const {
  return true;
}

void BytecoinSignStepARequest::Swap(BytecoinSignStepARequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytecoinSignStepARequest::InternalSwap(BytecoinSignStepARequest* other) {
  using std::swap;
  inv_output_main_hash_.Swap(&other->inv_output_main_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(address_index_, other->address_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BytecoinSignStepARequest::GetMetadata() const {
  protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BytecoinSignStepAResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BytecoinSignStepAResponse::kSigPFieldNumber;
const int BytecoinSignStepAResponse::kXFieldNumber;
const int BytecoinSignStepAResponse::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytecoinSignStepAResponse::BytecoinSignStepAResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinSignStepAResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.bytecoin.BytecoinSignStepAResponse)
}
BytecoinSignStepAResponse::BytecoinSignStepAResponse(const BytecoinSignStepAResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sig_p_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sig_p()) {
    sig_p_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sig_p_);
  }
  x_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_x()) {
    x_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_);
  }
  y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_y()) {
    y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.bytecoin.BytecoinSignStepAResponse)
}

void BytecoinSignStepAResponse::SharedCtor() {
  sig_p_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BytecoinSignStepAResponse::~BytecoinSignStepAResponse() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.bytecoin.BytecoinSignStepAResponse)
  SharedDtor();
}

void BytecoinSignStepAResponse::SharedDtor() {
  sig_p_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BytecoinSignStepAResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BytecoinSignStepAResponse::descriptor() {
  ::protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytecoinSignStepAResponse& BytecoinSignStepAResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinSignStepAResponse.base);
  return *internal_default_instance();
}


void BytecoinSignStepAResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.bytecoin.BytecoinSignStepAResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      sig_p_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      x_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      y_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BytecoinSignStepAResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.bytecoin.BytecoinSignStepAResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes sig_p = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sig_p()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_x()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_y()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.bytecoin.BytecoinSignStepAResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.bytecoin.BytecoinSignStepAResponse)
  return false;
#undef DO_
}

void BytecoinSignStepAResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.bytecoin.BytecoinSignStepAResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sig_p = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->sig_p(), output);
  }

  // optional bytes x = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->x(), output);
  }

  // optional bytes y = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.bytecoin.BytecoinSignStepAResponse)
}

::google::protobuf::uint8* BytecoinSignStepAResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.bytecoin.BytecoinSignStepAResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sig_p = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->sig_p(), target);
  }

  // optional bytes x = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->x(), target);
  }

  // optional bytes y = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.bytecoin.BytecoinSignStepAResponse)
  return target;
}

size_t BytecoinSignStepAResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.bytecoin.BytecoinSignStepAResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes sig_p = 1;
    if (has_sig_p()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sig_p());
    }

    // optional bytes x = 2;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->x());
    }

    // optional bytes y = 3;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->y());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BytecoinSignStepAResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.bytecoin.BytecoinSignStepAResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BytecoinSignStepAResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytecoinSignStepAResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.bytecoin.BytecoinSignStepAResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.bytecoin.BytecoinSignStepAResponse)
    MergeFrom(*source);
  }
}

void BytecoinSignStepAResponse::MergeFrom(const BytecoinSignStepAResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.bytecoin.BytecoinSignStepAResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sig_p();
      sig_p_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sig_p_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_x();
      x_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_y();
      y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_);
    }
  }
}

void BytecoinSignStepAResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.bytecoin.BytecoinSignStepAResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytecoinSignStepAResponse::CopyFrom(const BytecoinSignStepAResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.bytecoin.BytecoinSignStepAResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytecoinSignStepAResponse::IsInitialized() const {
  return true;
}

void BytecoinSignStepAResponse::Swap(BytecoinSignStepAResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytecoinSignStepAResponse::InternalSwap(BytecoinSignStepAResponse* other) {
  using std::swap;
  sig_p_.Swap(&other->sig_p_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  x_.Swap(&other->x_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  y_.Swap(&other->y_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BytecoinSignStepAResponse::GetMetadata() const {
  protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BytecoinSignStepAMoreDataRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BytecoinSignStepAMoreDataRequest::kDataChunkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytecoinSignStepAMoreDataRequest::BytecoinSignStepAMoreDataRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinSignStepAMoreDataRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.bytecoin.BytecoinSignStepAMoreDataRequest)
}
BytecoinSignStepAMoreDataRequest::BytecoinSignStepAMoreDataRequest(const BytecoinSignStepAMoreDataRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_chunk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data_chunk()) {
    data_chunk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_chunk_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.bytecoin.BytecoinSignStepAMoreDataRequest)
}

void BytecoinSignStepAMoreDataRequest::SharedCtor() {
  data_chunk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BytecoinSignStepAMoreDataRequest::~BytecoinSignStepAMoreDataRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.bytecoin.BytecoinSignStepAMoreDataRequest)
  SharedDtor();
}

void BytecoinSignStepAMoreDataRequest::SharedDtor() {
  data_chunk_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BytecoinSignStepAMoreDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BytecoinSignStepAMoreDataRequest::descriptor() {
  ::protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytecoinSignStepAMoreDataRequest& BytecoinSignStepAMoreDataRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinSignStepAMoreDataRequest.base);
  return *internal_default_instance();
}


void BytecoinSignStepAMoreDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.bytecoin.BytecoinSignStepAMoreDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    data_chunk_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BytecoinSignStepAMoreDataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.bytecoin.BytecoinSignStepAMoreDataRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes data_chunk = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data_chunk()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.bytecoin.BytecoinSignStepAMoreDataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.bytecoin.BytecoinSignStepAMoreDataRequest)
  return false;
#undef DO_
}

void BytecoinSignStepAMoreDataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.bytecoin.BytecoinSignStepAMoreDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes data_chunk = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data_chunk(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.bytecoin.BytecoinSignStepAMoreDataRequest)
}

::google::protobuf::uint8* BytecoinSignStepAMoreDataRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.bytecoin.BytecoinSignStepAMoreDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes data_chunk = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data_chunk(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.bytecoin.BytecoinSignStepAMoreDataRequest)
  return target;
}

size_t BytecoinSignStepAMoreDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.bytecoin.BytecoinSignStepAMoreDataRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bytes data_chunk = 1;
  if (has_data_chunk()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data_chunk());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BytecoinSignStepAMoreDataRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.bytecoin.BytecoinSignStepAMoreDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BytecoinSignStepAMoreDataRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytecoinSignStepAMoreDataRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.bytecoin.BytecoinSignStepAMoreDataRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.bytecoin.BytecoinSignStepAMoreDataRequest)
    MergeFrom(*source);
  }
}

void BytecoinSignStepAMoreDataRequest::MergeFrom(const BytecoinSignStepAMoreDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.bytecoin.BytecoinSignStepAMoreDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data_chunk()) {
    set_has_data_chunk();
    data_chunk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_chunk_);
  }
}

void BytecoinSignStepAMoreDataRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.bytecoin.BytecoinSignStepAMoreDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytecoinSignStepAMoreDataRequest::CopyFrom(const BytecoinSignStepAMoreDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.bytecoin.BytecoinSignStepAMoreDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytecoinSignStepAMoreDataRequest::IsInitialized() const {
  return true;
}

void BytecoinSignStepAMoreDataRequest::Swap(BytecoinSignStepAMoreDataRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytecoinSignStepAMoreDataRequest::InternalSwap(BytecoinSignStepAMoreDataRequest* other) {
  using std::swap;
  data_chunk_.Swap(&other->data_chunk_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BytecoinSignStepAMoreDataRequest::GetMetadata() const {
  protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BytecoinSignGetC0Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytecoinSignGetC0Request::BytecoinSignGetC0Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinSignGetC0Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.bytecoin.BytecoinSignGetC0Request)
}
BytecoinSignGetC0Request::BytecoinSignGetC0Request(const BytecoinSignGetC0Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.bytecoin.BytecoinSignGetC0Request)
}

void BytecoinSignGetC0Request::SharedCtor() {
}

BytecoinSignGetC0Request::~BytecoinSignGetC0Request() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.bytecoin.BytecoinSignGetC0Request)
  SharedDtor();
}

void BytecoinSignGetC0Request::SharedDtor() {
}

void BytecoinSignGetC0Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BytecoinSignGetC0Request::descriptor() {
  ::protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytecoinSignGetC0Request& BytecoinSignGetC0Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinSignGetC0Request.base);
  return *internal_default_instance();
}


void BytecoinSignGetC0Request::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.bytecoin.BytecoinSignGetC0Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BytecoinSignGetC0Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.bytecoin.BytecoinSignGetC0Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.bytecoin.BytecoinSignGetC0Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.bytecoin.BytecoinSignGetC0Request)
  return false;
#undef DO_
}

void BytecoinSignGetC0Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.bytecoin.BytecoinSignGetC0Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.bytecoin.BytecoinSignGetC0Request)
}

::google::protobuf::uint8* BytecoinSignGetC0Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.bytecoin.BytecoinSignGetC0Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.bytecoin.BytecoinSignGetC0Request)
  return target;
}

size_t BytecoinSignGetC0Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.bytecoin.BytecoinSignGetC0Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BytecoinSignGetC0Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.bytecoin.BytecoinSignGetC0Request)
  GOOGLE_DCHECK_NE(&from, this);
  const BytecoinSignGetC0Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytecoinSignGetC0Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.bytecoin.BytecoinSignGetC0Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.bytecoin.BytecoinSignGetC0Request)
    MergeFrom(*source);
  }
}

void BytecoinSignGetC0Request::MergeFrom(const BytecoinSignGetC0Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.bytecoin.BytecoinSignGetC0Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BytecoinSignGetC0Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.bytecoin.BytecoinSignGetC0Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytecoinSignGetC0Request::CopyFrom(const BytecoinSignGetC0Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.bytecoin.BytecoinSignGetC0Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytecoinSignGetC0Request::IsInitialized() const {
  return true;
}

void BytecoinSignGetC0Request::Swap(BytecoinSignGetC0Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytecoinSignGetC0Request::InternalSwap(BytecoinSignGetC0Request* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BytecoinSignGetC0Request::GetMetadata() const {
  protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BytecoinSignGetC0Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BytecoinSignGetC0Response::kC0FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytecoinSignGetC0Response::BytecoinSignGetC0Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinSignGetC0Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.bytecoin.BytecoinSignGetC0Response)
}
BytecoinSignGetC0Response::BytecoinSignGetC0Response(const BytecoinSignGetC0Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_c0()) {
    c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.c0_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.bytecoin.BytecoinSignGetC0Response)
}

void BytecoinSignGetC0Response::SharedCtor() {
  c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BytecoinSignGetC0Response::~BytecoinSignGetC0Response() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.bytecoin.BytecoinSignGetC0Response)
  SharedDtor();
}

void BytecoinSignGetC0Response::SharedDtor() {
  c0_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BytecoinSignGetC0Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BytecoinSignGetC0Response::descriptor() {
  ::protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytecoinSignGetC0Response& BytecoinSignGetC0Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinSignGetC0Response.base);
  return *internal_default_instance();
}


void BytecoinSignGetC0Response::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.bytecoin.BytecoinSignGetC0Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    c0_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BytecoinSignGetC0Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.bytecoin.BytecoinSignGetC0Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes c0 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_c0()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.bytecoin.BytecoinSignGetC0Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.bytecoin.BytecoinSignGetC0Response)
  return false;
#undef DO_
}

void BytecoinSignGetC0Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.bytecoin.BytecoinSignGetC0Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes c0 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->c0(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.bytecoin.BytecoinSignGetC0Response)
}

::google::protobuf::uint8* BytecoinSignGetC0Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.bytecoin.BytecoinSignGetC0Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes c0 = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->c0(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.bytecoin.BytecoinSignGetC0Response)
  return target;
}

size_t BytecoinSignGetC0Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.bytecoin.BytecoinSignGetC0Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bytes c0 = 1;
  if (has_c0()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->c0());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BytecoinSignGetC0Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.bytecoin.BytecoinSignGetC0Response)
  GOOGLE_DCHECK_NE(&from, this);
  const BytecoinSignGetC0Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytecoinSignGetC0Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.bytecoin.BytecoinSignGetC0Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.bytecoin.BytecoinSignGetC0Response)
    MergeFrom(*source);
  }
}

void BytecoinSignGetC0Response::MergeFrom(const BytecoinSignGetC0Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.bytecoin.BytecoinSignGetC0Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_c0()) {
    set_has_c0();
    c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.c0_);
  }
}

void BytecoinSignGetC0Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.bytecoin.BytecoinSignGetC0Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytecoinSignGetC0Response::CopyFrom(const BytecoinSignGetC0Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.bytecoin.BytecoinSignGetC0Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytecoinSignGetC0Response::IsInitialized() const {
  return true;
}

void BytecoinSignGetC0Response::Swap(BytecoinSignGetC0Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytecoinSignGetC0Response::InternalSwap(BytecoinSignGetC0Response* other) {
  using std::swap;
  c0_.Swap(&other->c0_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BytecoinSignGetC0Response::GetMetadata() const {
  protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BytecoinSignStepBRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BytecoinSignStepBRequest::kInvOutputMainHashFieldNumber;
const int BytecoinSignStepBRequest::kAddressIndexFieldNumber;
const int BytecoinSignStepBRequest::kMyCFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytecoinSignStepBRequest::BytecoinSignStepBRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinSignStepBRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.bytecoin.BytecoinSignStepBRequest)
}
BytecoinSignStepBRequest::BytecoinSignStepBRequest(const BytecoinSignStepBRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  inv_output_main_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_inv_output_main_hash()) {
    inv_output_main_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inv_output_main_hash_);
  }
  my_c_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_my_c()) {
    my_c_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.my_c_);
  }
  address_index_ = from.address_index_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.bytecoin.BytecoinSignStepBRequest)
}

void BytecoinSignStepBRequest::SharedCtor() {
  inv_output_main_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  my_c_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_index_ = GOOGLE_ULONGLONG(0);
}

BytecoinSignStepBRequest::~BytecoinSignStepBRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.bytecoin.BytecoinSignStepBRequest)
  SharedDtor();
}

void BytecoinSignStepBRequest::SharedDtor() {
  inv_output_main_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  my_c_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BytecoinSignStepBRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BytecoinSignStepBRequest::descriptor() {
  ::protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytecoinSignStepBRequest& BytecoinSignStepBRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinSignStepBRequest.base);
  return *internal_default_instance();
}


void BytecoinSignStepBRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.bytecoin.BytecoinSignStepBRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      inv_output_main_hash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      my_c_.ClearNonDefaultToEmptyNoArena();
    }
  }
  address_index_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BytecoinSignStepBRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.bytecoin.BytecoinSignStepBRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes inv_output_main_hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_inv_output_main_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 address_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_address_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &address_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes my_c = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_my_c()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.bytecoin.BytecoinSignStepBRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.bytecoin.BytecoinSignStepBRequest)
  return false;
#undef DO_
}

void BytecoinSignStepBRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.bytecoin.BytecoinSignStepBRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes inv_output_main_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->inv_output_main_hash(), output);
  }

  // optional uint64 address_index = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->address_index(), output);
  }

  // optional bytes my_c = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->my_c(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.bytecoin.BytecoinSignStepBRequest)
}

::google::protobuf::uint8* BytecoinSignStepBRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.bytecoin.BytecoinSignStepBRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes inv_output_main_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->inv_output_main_hash(), target);
  }

  // optional uint64 address_index = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->address_index(), target);
  }

  // optional bytes my_c = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->my_c(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.bytecoin.BytecoinSignStepBRequest)
  return target;
}

size_t BytecoinSignStepBRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.bytecoin.BytecoinSignStepBRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes inv_output_main_hash = 1;
    if (has_inv_output_main_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->inv_output_main_hash());
    }

    // optional bytes my_c = 3;
    if (has_my_c()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->my_c());
    }

    // optional uint64 address_index = 2;
    if (has_address_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->address_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BytecoinSignStepBRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.bytecoin.BytecoinSignStepBRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BytecoinSignStepBRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytecoinSignStepBRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.bytecoin.BytecoinSignStepBRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.bytecoin.BytecoinSignStepBRequest)
    MergeFrom(*source);
  }
}

void BytecoinSignStepBRequest::MergeFrom(const BytecoinSignStepBRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.bytecoin.BytecoinSignStepBRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_inv_output_main_hash();
      inv_output_main_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inv_output_main_hash_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_my_c();
      my_c_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.my_c_);
    }
    if (cached_has_bits & 0x00000004u) {
      address_index_ = from.address_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BytecoinSignStepBRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.bytecoin.BytecoinSignStepBRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytecoinSignStepBRequest::CopyFrom(const BytecoinSignStepBRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.bytecoin.BytecoinSignStepBRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytecoinSignStepBRequest::IsInitialized() const {
  return true;
}

void BytecoinSignStepBRequest::Swap(BytecoinSignStepBRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytecoinSignStepBRequest::InternalSwap(BytecoinSignStepBRequest* other) {
  using std::swap;
  inv_output_main_hash_.Swap(&other->inv_output_main_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  my_c_.Swap(&other->my_c_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(address_index_, other->address_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BytecoinSignStepBRequest::GetMetadata() const {
  protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BytecoinSignStepBResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BytecoinSignStepBResponse::kMyRaFieldNumber;
const int BytecoinSignStepBResponse::kRbFieldNumber;
const int BytecoinSignStepBResponse::kRcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytecoinSignStepBResponse::BytecoinSignStepBResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinSignStepBResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.bytecoin.BytecoinSignStepBResponse)
}
BytecoinSignStepBResponse::BytecoinSignStepBResponse(const BytecoinSignStepBResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  my_ra_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_my_ra()) {
    my_ra_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.my_ra_);
  }
  rb_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_rb()) {
    rb_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rb_);
  }
  rc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_rc()) {
    rc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rc_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.bytecoin.BytecoinSignStepBResponse)
}

void BytecoinSignStepBResponse::SharedCtor() {
  my_ra_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rb_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BytecoinSignStepBResponse::~BytecoinSignStepBResponse() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.bytecoin.BytecoinSignStepBResponse)
  SharedDtor();
}

void BytecoinSignStepBResponse::SharedDtor() {
  my_ra_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rb_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BytecoinSignStepBResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BytecoinSignStepBResponse::descriptor() {
  ::protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytecoinSignStepBResponse& BytecoinSignStepBResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinSignStepBResponse.base);
  return *internal_default_instance();
}


void BytecoinSignStepBResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.bytecoin.BytecoinSignStepBResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      my_ra_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      rb_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      rc_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BytecoinSignStepBResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.bytecoin.BytecoinSignStepBResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes my_ra = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_my_ra()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes rb = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_rb()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes rc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_rc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.bytecoin.BytecoinSignStepBResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.bytecoin.BytecoinSignStepBResponse)
  return false;
#undef DO_
}

void BytecoinSignStepBResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.bytecoin.BytecoinSignStepBResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes my_ra = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->my_ra(), output);
  }

  // optional bytes rb = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->rb(), output);
  }

  // optional bytes rc = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->rc(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.bytecoin.BytecoinSignStepBResponse)
}

::google::protobuf::uint8* BytecoinSignStepBResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.bytecoin.BytecoinSignStepBResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes my_ra = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->my_ra(), target);
  }

  // optional bytes rb = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->rb(), target);
  }

  // optional bytes rc = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->rc(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.bytecoin.BytecoinSignStepBResponse)
  return target;
}

size_t BytecoinSignStepBResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.bytecoin.BytecoinSignStepBResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes my_ra = 1;
    if (has_my_ra()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->my_ra());
    }

    // optional bytes rb = 2;
    if (has_rb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->rb());
    }

    // optional bytes rc = 3;
    if (has_rc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->rc());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BytecoinSignStepBResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.bytecoin.BytecoinSignStepBResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BytecoinSignStepBResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytecoinSignStepBResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.bytecoin.BytecoinSignStepBResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.bytecoin.BytecoinSignStepBResponse)
    MergeFrom(*source);
  }
}

void BytecoinSignStepBResponse::MergeFrom(const BytecoinSignStepBResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.bytecoin.BytecoinSignStepBResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_my_ra();
      my_ra_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.my_ra_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_rb();
      rb_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rb_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_rc();
      rc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rc_);
    }
  }
}

void BytecoinSignStepBResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.bytecoin.BytecoinSignStepBResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytecoinSignStepBResponse::CopyFrom(const BytecoinSignStepBResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.bytecoin.BytecoinSignStepBResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytecoinSignStepBResponse::IsInitialized() const {
  return true;
}

void BytecoinSignStepBResponse::Swap(BytecoinSignStepBResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytecoinSignStepBResponse::InternalSwap(BytecoinSignStepBResponse* other) {
  using std::swap;
  my_ra_.Swap(&other->my_ra_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rb_.Swap(&other->rb_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rc_.Swap(&other->rc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BytecoinSignStepBResponse::GetMetadata() const {
  protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BytecoinStartProofRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BytecoinStartProofRequest::kDataSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytecoinStartProofRequest::BytecoinStartProofRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinStartProofRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.bytecoin.BytecoinStartProofRequest)
}
BytecoinStartProofRequest::BytecoinStartProofRequest(const BytecoinStartProofRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_size_ = from.data_size_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.bytecoin.BytecoinStartProofRequest)
}

void BytecoinStartProofRequest::SharedCtor() {
  data_size_ = 0u;
}

BytecoinStartProofRequest::~BytecoinStartProofRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.bytecoin.BytecoinStartProofRequest)
  SharedDtor();
}

void BytecoinStartProofRequest::SharedDtor() {
}

void BytecoinStartProofRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BytecoinStartProofRequest::descriptor() {
  ::protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytecoinStartProofRequest& BytecoinStartProofRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinStartProofRequest.base);
  return *internal_default_instance();
}


void BytecoinStartProofRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.bytecoin.BytecoinStartProofRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_size_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BytecoinStartProofRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.bytecoin.BytecoinStartProofRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 data_size = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_data_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.bytecoin.BytecoinStartProofRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.bytecoin.BytecoinStartProofRequest)
  return false;
#undef DO_
}

void BytecoinStartProofRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.bytecoin.BytecoinStartProofRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 data_size = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->data_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.bytecoin.BytecoinStartProofRequest)
}

::google::protobuf::uint8* BytecoinStartProofRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.bytecoin.BytecoinStartProofRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 data_size = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->data_size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.bytecoin.BytecoinStartProofRequest)
  return target;
}

size_t BytecoinStartProofRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.bytecoin.BytecoinStartProofRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 data_size = 1;
  if (has_data_size()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BytecoinStartProofRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.bytecoin.BytecoinStartProofRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BytecoinStartProofRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytecoinStartProofRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.bytecoin.BytecoinStartProofRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.bytecoin.BytecoinStartProofRequest)
    MergeFrom(*source);
  }
}

void BytecoinStartProofRequest::MergeFrom(const BytecoinStartProofRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.bytecoin.BytecoinStartProofRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data_size()) {
    set_data_size(from.data_size());
  }
}

void BytecoinStartProofRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.bytecoin.BytecoinStartProofRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytecoinStartProofRequest::CopyFrom(const BytecoinStartProofRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.bytecoin.BytecoinStartProofRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytecoinStartProofRequest::IsInitialized() const {
  return true;
}

void BytecoinStartProofRequest::Swap(BytecoinStartProofRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytecoinStartProofRequest::InternalSwap(BytecoinStartProofRequest* other) {
  using std::swap;
  swap(data_size_, other->data_size_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BytecoinStartProofRequest::GetMetadata() const {
  protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BytecoinProofMoreDataRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BytecoinProofMoreDataRequest::kDataChunkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytecoinProofMoreDataRequest::BytecoinProofMoreDataRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinProofMoreDataRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.bytecoin.BytecoinProofMoreDataRequest)
}
BytecoinProofMoreDataRequest::BytecoinProofMoreDataRequest(const BytecoinProofMoreDataRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_chunk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data_chunk()) {
    data_chunk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_chunk_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.bytecoin.BytecoinProofMoreDataRequest)
}

void BytecoinProofMoreDataRequest::SharedCtor() {
  data_chunk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BytecoinProofMoreDataRequest::~BytecoinProofMoreDataRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.bytecoin.BytecoinProofMoreDataRequest)
  SharedDtor();
}

void BytecoinProofMoreDataRequest::SharedDtor() {
  data_chunk_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BytecoinProofMoreDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BytecoinProofMoreDataRequest::descriptor() {
  ::protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytecoinProofMoreDataRequest& BytecoinProofMoreDataRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2dbytecoin_2eproto::scc_info_BytecoinProofMoreDataRequest.base);
  return *internal_default_instance();
}


void BytecoinProofMoreDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.bytecoin.BytecoinProofMoreDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    data_chunk_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BytecoinProofMoreDataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.bytecoin.BytecoinProofMoreDataRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes data_chunk = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data_chunk()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.bytecoin.BytecoinProofMoreDataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.bytecoin.BytecoinProofMoreDataRequest)
  return false;
#undef DO_
}

void BytecoinProofMoreDataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.bytecoin.BytecoinProofMoreDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes data_chunk = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data_chunk(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.bytecoin.BytecoinProofMoreDataRequest)
}

::google::protobuf::uint8* BytecoinProofMoreDataRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.bytecoin.BytecoinProofMoreDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes data_chunk = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data_chunk(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.bytecoin.BytecoinProofMoreDataRequest)
  return target;
}

size_t BytecoinProofMoreDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.bytecoin.BytecoinProofMoreDataRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bytes data_chunk = 1;
  if (has_data_chunk()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data_chunk());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BytecoinProofMoreDataRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.bytecoin.BytecoinProofMoreDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BytecoinProofMoreDataRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytecoinProofMoreDataRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.bytecoin.BytecoinProofMoreDataRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.bytecoin.BytecoinProofMoreDataRequest)
    MergeFrom(*source);
  }
}

void BytecoinProofMoreDataRequest::MergeFrom(const BytecoinProofMoreDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.bytecoin.BytecoinProofMoreDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data_chunk()) {
    set_has_data_chunk();
    data_chunk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_chunk_);
  }
}

void BytecoinProofMoreDataRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.bytecoin.BytecoinProofMoreDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytecoinProofMoreDataRequest::CopyFrom(const BytecoinProofMoreDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.bytecoin.BytecoinProofMoreDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytecoinProofMoreDataRequest::IsInitialized() const {
  return true;
}

void BytecoinProofMoreDataRequest::Swap(BytecoinProofMoreDataRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytecoinProofMoreDataRequest::InternalSwap(BytecoinProofMoreDataRequest* other) {
  using std::swap;
  data_chunk_.Swap(&other->data_chunk_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BytecoinProofMoreDataRequest::GetMetadata() const {
  protobuf_messages_2dbytecoin_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2dbytecoin_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace bytecoin
}  // namespace messages
}  // namespace trezor
}  // namespace hw
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::bytecoin::BytecoinStartRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::bytecoin::BytecoinStartRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::bytecoin::BytecoinStartRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::bytecoin::BytecoinStartResponse* Arena::CreateMaybeMessage< ::hw::trezor::messages::bytecoin::BytecoinStartResponse >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::bytecoin::BytecoinStartResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::bytecoin::BytecoinScanOutputsRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::bytecoin::BytecoinScanOutputsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::bytecoin::BytecoinScanOutputsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::bytecoin::BytecoinScanOutputsResponse* Arena::CreateMaybeMessage< ::hw::trezor::messages::bytecoin::BytecoinScanOutputsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::bytecoin::BytecoinScanOutputsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::bytecoin::BytecoinGenerateKeyimageRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::bytecoin::BytecoinGenerateKeyimageRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::bytecoin::BytecoinGenerateKeyimageRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::bytecoin::BytecoinGenerateKeyimageResponse* Arena::CreateMaybeMessage< ::hw::trezor::messages::bytecoin::BytecoinGenerateKeyimageResponse >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::bytecoin::BytecoinGenerateKeyimageResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::bytecoin::BytecoinGenerateOutputSeedRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::bytecoin::BytecoinGenerateOutputSeedRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::bytecoin::BytecoinGenerateOutputSeedRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::bytecoin::BytecoinGenerateOutputSeedResponse* Arena::CreateMaybeMessage< ::hw::trezor::messages::bytecoin::BytecoinGenerateOutputSeedResponse >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::bytecoin::BytecoinGenerateOutputSeedResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::bytecoin::BytecoinExportViewWalletRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::bytecoin::BytecoinExportViewWalletRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::bytecoin::BytecoinExportViewWalletRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::bytecoin::BytecoinExportViewWalletResponse* Arena::CreateMaybeMessage< ::hw::trezor::messages::bytecoin::BytecoinExportViewWalletResponse >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::bytecoin::BytecoinExportViewWalletResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::bytecoin::BytecoinSignStartRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::bytecoin::BytecoinSignStartRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::bytecoin::BytecoinSignStartRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::bytecoin::BytecoinEmptyResponse* Arena::CreateMaybeMessage< ::hw::trezor::messages::bytecoin::BytecoinEmptyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::bytecoin::BytecoinEmptyResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::bytecoin::BytecoinSignAddInputRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::bytecoin::BytecoinSignAddInputRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::bytecoin::BytecoinSignAddInputRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::bytecoin::BytecoinSignAddOutputRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::bytecoin::BytecoinSignAddOutputRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::bytecoin::BytecoinSignAddOutputRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::bytecoin::BytecoinSignAddOutputResponse* Arena::CreateMaybeMessage< ::hw::trezor::messages::bytecoin::BytecoinSignAddOutputResponse >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::bytecoin::BytecoinSignAddOutputResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::bytecoin::BytecoinSignAddExtraRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::bytecoin::BytecoinSignAddExtraRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::bytecoin::BytecoinSignAddExtraRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::bytecoin::BytecoinSignStepARequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::bytecoin::BytecoinSignStepARequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::bytecoin::BytecoinSignStepARequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::bytecoin::BytecoinSignStepAResponse* Arena::CreateMaybeMessage< ::hw::trezor::messages::bytecoin::BytecoinSignStepAResponse >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::bytecoin::BytecoinSignStepAResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::bytecoin::BytecoinSignStepAMoreDataRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::bytecoin::BytecoinSignStepAMoreDataRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::bytecoin::BytecoinSignStepAMoreDataRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::bytecoin::BytecoinSignGetC0Request* Arena::CreateMaybeMessage< ::hw::trezor::messages::bytecoin::BytecoinSignGetC0Request >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::bytecoin::BytecoinSignGetC0Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::bytecoin::BytecoinSignGetC0Response* Arena::CreateMaybeMessage< ::hw::trezor::messages::bytecoin::BytecoinSignGetC0Response >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::bytecoin::BytecoinSignGetC0Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::bytecoin::BytecoinSignStepBRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::bytecoin::BytecoinSignStepBRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::bytecoin::BytecoinSignStepBRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::bytecoin::BytecoinSignStepBResponse* Arena::CreateMaybeMessage< ::hw::trezor::messages::bytecoin::BytecoinSignStepBResponse >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::bytecoin::BytecoinSignStepBResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::bytecoin::BytecoinStartProofRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::bytecoin::BytecoinStartProofRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::bytecoin::BytecoinStartProofRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hw::trezor::messages::bytecoin::BytecoinProofMoreDataRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::bytecoin::BytecoinProofMoreDataRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::bytecoin::BytecoinProofMoreDataRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
